495 1479 4 5 0 0 40 3 40
00 | 00000 0 track 0
00 | 00001 0
00 | 00002 0
00 | 00003 0
00 | 00004 0 track 1
00 | 00005 0
00 | 00006 0
00 | 00007 0
00 | 00008 0 track 2
00 | 00009 0
00 | 00010 0
00 | 00011 0
00 | 00012 0 track 3
00 | 00013 0
00 | 00014 0
00 | 00015 0
00 | 00016 0 track 4
00 | 00017 0
00 | 00018 0
00 | 00019 0
00 | 00020 0000 wClock 0
00 | 00021 0001
00 | 00022 0002
00 | 00023 0003
00 | 00024 0004
00 | 00025 0005
00 | 00026 0006
00 | 00027 0007
00 | 00028 0008 wClock 1
00 | 00029 0009
00 | 00030 0010
00 | 00031 0011
00 | 00032 0012
00 | 00033 0013
00 | 00034 0014
00 | 00035 0015
00 | 00036 0016 wClock 2
00 | 00037 0017
00 | 00038 0018
00 | 00039 0019
00 | 00040 0020
00 | 00041 0021
00 | 00042 0022
00 | 00043 0023
00 | 00044 0024 wClock 3
00 | 00045 0025
00 | 00046 0026
00 | 00047 0027
00 | 00048 0028
00 | 00049 0029
00 | 00050 0030
00 | 00051 0031
00 | 00052 0032 wClock 4
00 | 00053 0033
00 | 00054 0034
00 | 00055 0035
00 | 00056 0036
00 | 00057 0037
00 | 00058 0038
00 | 00059 0039
00 | 00060 0040 inEvt 005 : TEMP
00 | 00061 0041           : 01 gates
00 | 00062 0042
00 | 00063 0043
00 | 00064 0044 inEvt 041 : SEND_DONE
00 | 00065 0045           : 05 gates
00 | 00066 0046
00 | 00067 0047
00 | 00068 0048
00 | 00069 0049
00 | 00070 0050
00 | 00071 0051
00 | 00072 0052
00 | 00073 0053
00 | 00074 0054
00 | 00075 0055
00 | 00076 0056 inEvt 044 : RECEIVE()
00 | 00077 0057           : 05 gates
00 | 00078 0058
00 | 00079 0059
00 | 00080 0060
00 | 00081 0061
00 | 00082 0062
00 | 00083 0063
00 | 00084 0064
00 | 00085 0065
00 | 00086 0066
00 | 00087 0067
00 | 00088 0068
00 | 00089 0069
00 | 00090 0070
00 | 00091 0071
00 | 00092 0072
00 | 00093 0073 $ret:1, 
00 | 00094 0074 sucessores:112, 
00 | 00095 0075 
00 | 00096 0076 
00 | 00097 0077 
00 | 00098 0078 
00 | 00099 0079 
00 | 00100 0080 
00 | 00101 0081 
00 | 00102 0082 
00 | 00103 0083 
00 | 00104 0084 
00 | 00105 0085 
00 | 00106 0086 
00 | 00107 0087 
00 | 00108 0088 
00 | 00109 0089 
00 | 00110 0090 
00 | 00111 0091 
00 | 00112 0092 
00 | 00113 0093 
00 | 00114 0094 
00 | 00115 0095 
00 | 00116 0096 
00 | 00117 0097 
00 | 00118 0098 
00 | 00119 0099 
00 | 00120 0100 
00 | 00121 0101 
00 | 00122 0102 
00 | 00123 0103 
00 | 00124 0104 
00 | 00125 0105 
00 | 00126 0106 
00 | 00127 0107 
00 | 00128 0108 
00 | 00129 0109 
00 | 00130 0110 
00 | 00131 0111 
00 | 00132 0112 
00 | 00133 0113 
00 | 00134 0114 
00 | 00135 0115 
00 | 00136 0116 
00 | 00137 0117 
00 | 00138 0118 
00 | 00139 0119 
00 | 00140 0120 
00 | 00141 0121 
00 | 00142 0122 
00 | 00143 0123 
00 | 00144 0124 
00 | 00145 0125 
00 | 00146 0126 
00 | 00147 0127 
00 | 00148 0128 
00 | 00149 0129 
00 | 00150 0130 
00 | 00151 0131 
00 | 00152 0132 
00 | 00153 0133 
00 | 00154 0134 
00 | 00155 0135 
00 | 00156 0136 
00 | 00157 0137 
00 | 00158 0138 
00 | 00159 0139 
00 | 00160 0140 
00 | 00161 0141 
00 | 00162 0142 
00 | 00163 0143 
00 | 00164 0144 
00 | 00165 0145 
00 | 00166 0146 
00 | 00167 0147 
00 | 00168 0148 
00 | 00169 0149 
00 | 00170 0150 
00 | 00171 0151 
00 | 00172 0152 
00 | 00173 0153 
00 | 00174 0154 
00 | 00175 0155 
00 | 00176 0156 
00 | 00177 0157 
00 | 00178 0158 
00 | 00179 0159 
00 | 00180 0160 
00 | 00181 0161 
00 | 00182 0162 
00 | 00183 0163 
00 | 00184 0164 
00 | 00185 0165 
00 | 00186 0166 
00 | 00187 0167 
00 | 00188 0168 
00 | 00189 0169 
00 | 00190 0170 
00 | 00191 0171 
00 | 00192 0172 
00 | 00193 0173 
00 | 00194 0174 
00 | 00195 0175 
00 | 00196 0176 
00 | 00197 0177 
00 | 00198 0178 
00 | 00199 0179 
00 | 00200 0180 
00 | 00201 0181 
00 | 00202 0182 
00 | 00203 0183 
00 | 00204 0184 
00 | 00205 0185 
00 | 00206 0186 fila:1, 
00 | 00207 0187 nodeId:2, 
00 | 00208 0188 
00 | 00209 0189 alta_temp:2, 
00 | 00210 0190 
00 | 00211 0191 temps:8, 
00 | 00212 0192 
00 | 00213 0193 
00 | 00214 0194 
00 | 00215 0195 
00 | 00216 0196 
00 | 00217 0197 
00 | 00218 0198 
00 | 00219 0199 temp:2, 
00 | 00220 0200 
00 | 00221 0201 med_temp:2, 
00 | 00222 0202 
00 | 00223 0203 sendPath:25, 
00 | 00224 0204 
00 | 00225 0205 
00 | 00226 0206 
00 | 00227 0207 
00 | 00228 0208 
00 | 00229 0209 
00 | 00230 0210 
00 | 00231 0211 
00 | 00232 0212 
00 | 00233 0213 
00 | 00234 0214 
00 | 00235 0215 
00 | 00236 0216 
00 | 00237 0217 
00 | 00238 0218 
00 | 00239 0219 
00 | 00240 0220 
00 | 00241 0221 
00 | 00242 0222 
00 | 00243 0223 
00 | 00244 0224 
00 | 00245 0225 
00 | 00246 0226 
00 | 00247 0227 
00 | 00248 0228 recPath:25, 
00 | 00249 0229 
00 | 00250 0230 
00 | 00251 0231 
00 | 00252 0232 
00 | 00253 0233 
00 | 00254 0234 
00 | 00255 0235 
00 | 00256 0236 
00 | 00257 0237 
00 | 00258 0238 
00 | 00259 0239 
00 | 00260 0240 
00 | 00261 0241 
00 | 00262 0242 
00 | 00263 0243 
00 | 00264 0244 
00 | 00265 0245 
00 | 00266 0246 
00 | 00267 0247 
00 | 00268 0248 
00 | 00269 0249 
00 | 00270 0250 
00 | 00271 0251 
00 | 00272 0252 
00 | 00273 0253 sucessor1:16, 
00 | 00274 0254 
00 | 00275 0255 
00 | 00276 0256 
00 | 00277 0257 
00 | 00278 0258 
00 | 00279 0259 
00 | 00280 0260 
00 | 00281 0261 
00 | 00282 0262 
00 | 00283 0263 
00 | 00284 0264 
00 | 00285 0265 
00 | 00286 0266 
00 | 00287 0267 
00 | 00288 0268 
00 | 00289 0269 sucessor2:16, 
00 | 00290 0270 
00 | 00291 0271 
00 | 00292 0272 
00 | 00293 0273 
00 | 00294 0274 
00 | 00295 0275 
00 | 00296 0276 
00 | 00297 0277 
00 | 00298 0278 
00 | 00299 0279 
00 | 00300 0280 
00 | 00301 0281 
00 | 00302 0282 
00 | 00303 0283 
00 | 00304 0284 
00 | 00305 0285 sucessor3:16, 
00 | 00306 0286 
00 | 00307 0287 
00 | 00308 0288 
00 | 00309 0289 
00 | 00310 0290 
00 | 00311 0291 
00 | 00312 0292 
00 | 00313 0293 
00 | 00314 0294 
00 | 00315 0295 
00 | 00316 0296 
00 | 00317 0297 
00 | 00318 0298 
00 | 00319 0299 
00 | 00320 0300 
00 | 00321 0301 sucessor4:16, 
00 | 00322 0302 
00 | 00323 0303 
00 | 00324 0304 
00 | 00325 0305 
00 | 00326 0306 
00 | 00327 0307 
00 | 00328 0308 
00 | 00329 0309 
00 | 00330 0310 
00 | 00331 0311 
00 | 00332 0312 
00 | 00333 0313 
00 | 00334 0314 
00 | 00335 0315 
00 | 00336 0316 
00 | 00337 0317 sucessor5:16, 
00 | 00338 0318 
00 | 00339 0319 
00 | 00340 0320 
00 | 00341 0321 
00 | 00342 0322 
00 | 00343 0323 
00 | 00344 0324 
00 | 00345 0325 
00 | 00346 0326 
00 | 00347 0327 
00 | 00348 0328 
00 | 00349 0329 
00 | 00350 0330 
00 | 00351 0331 
00 | 00352 0332 
00 | 00353 0333 sucessor6:16, 
00 | 00354 0334 
00 | 00355 0335 
00 | 00356 0336 
00 | 00357 0337 
00 | 00358 0338 
00 | 00359 0339 
00 | 00360 0340 
00 | 00361 0341 
00 | 00362 0342 
00 | 00363 0343 
00 | 00364 0344 
00 | 00365 0345 
00 | 00366 0346 
00 | 00367 0347 
00 | 00368 0348 
00 | 00369 0349 sucessor7:16, 
00 | 00370 0350 
00 | 00371 0351 
00 | 00372 0352 
00 | 00373 0353 
00 | 00374 0354 
00 | 00375 0355 
00 | 00376 0356 
00 | 00377 0357 
00 | 00378 0358 
00 | 00379 0359 
00 | 00380 0360 
00 | 00381 0361 
00 | 00382 0362 
00 | 00383 0363 
00 | 00384 0364 
00 | 00385 0365 sendPos:25, 
00 | 00386 0366 
00 | 00387 0367 
00 | 00388 0368 
00 | 00389 0369 
00 | 00390 0370 
00 | 00391 0371 
00 | 00392 0372 
00 | 00393 0373 
00 | 00394 0374 
00 | 00395 0375 
00 | 00396 0376 
00 | 00397 0377 
00 | 00398 0378 
00 | 00399 0379 
00 | 00400 0380 
00 | 00401 0381 
00 | 00402 0382 
00 | 00403 0383 
00 | 00404 0384 
00 | 00405 0385 
00 | 00406 0386 
00 | 00407 0387 
00 | 00408 0388 
00 | 00409 0389 
00 | 00410 0390 recPos:25, 
00 | 00411 0391 
00 | 00412 0392 
00 | 00413 0393 
00 | 00414 0394 
00 | 00415 0395 
00 | 00416 0396 
00 | 00417 0397 
00 | 00418 0398 
00 | 00419 0399 
00 | 00420 0400 
00 | 00421 0401 
00 | 00422 0402 
00 | 00423 0403 
00 | 00424 0404 
00 | 00425 0405 
00 | 00426 0406 
00 | 00427 0407 
00 | 00428 0408 
00 | 00429 0409 
00 | 00430 0410 
00 | 00431 0411 
00 | 00432 0412 
00 | 00433 0413 
00 | 00434 0414 
00 | 00435 0415 sendAlert:25, 
00 | 00436 0416 
00 | 00437 0417 
00 | 00438 0418 
00 | 00439 0419 
00 | 00440 0420 
00 | 00441 0421 
00 | 00442 0422 
00 | 00443 0423 
00 | 00444 0424 
00 | 00445 0425 
00 | 00446 0426 
00 | 00447 0427 
00 | 00448 0428 
00 | 00449 0429 
00 | 00450 0430 
00 | 00451 0431 
00 | 00452 0432 
00 | 00453 0433 
00 | 00454 0434 
00 | 00455 0435 
00 | 00456 0436 
00 | 00457 0437 
00 | 00458 0438 
00 | 00459 0439 
00 | 00460 0440 recAlert:25, 
00 | 00461 0441 
00 | 00462 0442 
00 | 00463 0443 
00 | 00464 0444 
00 | 00465 0445 
00 | 00466 0446 
00 | 00467 0447 
00 | 00468 0448 
00 | 00469 0449 
00 | 00470 0450 
00 | 00471 0451 
00 | 00472 0452 
00 | 00473 0453 
00 | 00474 0454 
00 | 00475 0455 
00 | 00476 0456 
00 | 00477 0457 
00 | 00478 0458 
00 | 00479 0459 
00 | 00480 0460 
00 | 00481 0461 
00 | 00482 0462 
00 | 00483 0463 
00 | 00484 0464 
00 | 00485 0465 i:1, i:1, progenitor:2, 
00 | 00486 0466 __i_0x9ec0da8:1, __i_0x9ec6b78:1, 
00 | 00487 0467 j:1, i:1, i:1, 
00 | 00488 0468 __j_0x9eca170:1, __i_0x9f6c630:1, __i_0x9f2cc28:1, 
00 | 00489 0469 j:1, 
00 | 00490 0470 __j_0x9eb3900:1, 
00 | 00491 0471 i:1, i:1, 
00 | 00492 0472 __i_0x9ebcf88:1, __i_0x9e954e0:1, 
00 | 00493 0473 j:1, 
00 | 00494 0474 __j_0x9f1dd18:1, 
d1 | 00495 d1 set_c ushort 40 1281          | config gate TEMP with 1 await(s) - 0x0501 = 1281
28 | 00496 28 
05 | 00497 05 
01 | 00498 01 
d1 | 00499 d1 set_c ushort 44 10501         | config gate SEND_DONE with 5 await(s) - 0x2905 = 10501
2c | 00500 2c 
29 | 00501 29 
05 | 00502 05 
d1 | 00503 d1 set_c ushort 56 11397         | config gate RECEIVE() with 5 await(s) - 0x2c85 = 11397
38 | 00504 38 
2c | 00505 2c 
85 | 00506 85 
24 | 00507 24 func 0                        | func getNodeId
00 | 00508 00 
a1 | 00509 a1 pop ushort 187                | pop nodeId
bb | 00510 bb 
c1 | 00511 c1 set_c ushort 189 0            | alta_temp = 0
bd | 00512 bd 
00 | 00513 00 
c1 | 00514 c1 set_c ushort 199 0            | temp = 0
c7 | 00515 c7 
00 | 00516 00 
c1 | 00517 c1 set_c ushort 201 0            | med_temp = 0
c9 | 00518 c9 
00 | 00519 00 
c0 | 00520 c0 set_c ubyte 203 1             | sendPath.type = 1
cb | 00521 cb 
01 | 00522 01 
d1 | 00523 d1 set_c ushort 206 0xffff       | sendPath.target = 0xffff
ce | 00524 ce 
ff | 00525 ff 
ff | 00526 ff 
2a | 00527 2a set_v ushort 204 ushort 187   | sendPath.source = nodeId
11 | 00528 11 
cc | 00529 cc 
bb | 00530 bb 
c0 | 00531 c0 set_c ubyte 208 0             | sendPath.num_saltos = 0
d0 | 00532 d0 
00 | 00533 00 
c2 | 00534 c2 set_c ulong 209 0             | sendPath.versao_rota = 0
d1 | 00535 d1 
00 | 00536 00 
c8 | 00537 c8 set_c ubyte 365 3             | sendPos.type = 3
01 | 00538 01 
6d | 00539 6d 
03 | 00540 03 
d9 | 00541 d9 set_c ushort 368 0xffff       | sendPos.target = 0xffff
01 | 00542 01 
70 | 00543 70 
ff | 00544 ff 
ff | 00545 ff 
2a | 00546 2a set_v ushort 366 ushort 187   | sendPos.source = nodeId
91 | 00547 91 
01 | 00548 01 
6e | 00549 6e 
bb | 00550 bb 
d9 | 00551 d9 set_c ushort 418 0xffff       | sendAlert.target = 0xffff
01 | 00552 01 
a2 | 00553 a2 
ff | 00554 ff 
ff | 00555 ff 
c8 | 00556 c8 set_c ubyte 415 2             | sendAlert.type = 2
01 | 00557 01 
9f | 00558 9f 
02 | 00559 02 
2a | 00560 2a set_v ushort 416 ushort 187   | sendAlert.source = nodeId
91 | 00561 91 
01 | 00562 01 
a0 | 00563 a0 
bb | 00564 bb 
40 | 00565 40 push_c 11                     | push 11
0b | 00566 0b 
91 | 00567 91 push_v ushort 187             | push nodeId:ushort
bb | 00568 bb 
0f | 00569 0f eq                            | eq
4f | 00570 4f ifelse 243 244                | ifelse True_243 False_244
02 | 00571 .00 addr:575
3f | 00572 .f3 
03 | 00573 .00 addr:887
77 | 00574 .f4 
89 | 00575 89 tkins_max 0 16                | insert track ParEver_sub_1_16
02 | 00576 .00 addr:582
46 | 00577 .10 
89 | 00578 89 tkins_max 0 17                | insert track ParEver_sub_2_17
03 | 00579 .00 addr:824
38 | 00580 .11 
01 | 00581 01 end                           | end
40 | 00582 40 push_c 1                      | push 1
01 | 00583 01 
92 | 00584 92 push_v ulong 209                    | push sendPath.versao_rota [Optm:: push_c addr + deref]
d1 | 00585 d1 
06 | 00586 06 add                           | add
a2 | 00587 a2 pop ulong 209                 | pop sendPath.versao_rota
d1 | 00588 d1 
b1 | 00589 b1 outevt_v 40 203               | emit SEND len=25 var=sendPath
28 | 00590 28 
cb | 00591 cb 
d1 | 00592 d1 set_c ushort 46 28            | await SEND_DONE[0]
2e | 00593 2e 
02 | 00594 .00 addr:597
55 | 00595 .1c 
01 | 00596 01 end                           | end
c8 | 00597 c8 set_c ubyte 465 0             | i = 0
01 | 00598 01 
d1 | 00599 d1 
00 | 00600 00 
c8 | 00601 c8 set_c ubyte 466 56            | __i_0x9ec0da8 = 56
01 | 00602 01 
d2 | 00603 d2 
38 | 00604 38 
98 | 00605 98 push_v ubyte 466              | push __i_0x9ec0da8:ubyte
01 | 00606 01 
d2 | 00607 d2 
98 | 00608 98 push_v ubyte 465              | push i:ubyte
01 | 00609 01 
d1 | 00610 d1 
11 | 00611 11 gte                           | gte
4f | 00612 4f ifelse 38 39                  | ifelse True_38 False_39
02 | 00613 .00 addr:617
69 | 00614 .26 
02 | 00615 .00 addr:625
71 | 00616 .27 
3d | 00617 3d tkins_z 1 16 33               | insert track Loop_out_33 tree 16
90 | 00618 90 
02 | 00619 .00 addr:640
80 | 00620 .21 
01 | 00621 01 end                           | end
39 | 00622 39 exec 40                       | goto  40
02 | 00623 .00 addr:605
5d | 00624 .1f 
2b | 00625 2b setarr_vc ushort 74 ubyte 465 56 0  | sucessores[i] = 0
18 | 00626 18 
00 | 00627 00 
4a | 00628 4a 
01 | 00629 01 
d1 | 00630 d1 
38 | 00631 38 
00 | 00632 00 
41 | 00633 41 push_c 465                    | push &i
01 | 00634 01 
d1 | 00635 d1 
60 | 00636 60 inc ubyte                     | inc ubyte
39 | 00637 39 exec 40                       | goto  40
02 | 00638 .00 addr:605
5d | 00639 .1f 
89 | 00640 89 tkins_max 0 41                | insert track ParOr_sub_1_41
02 | 00641 .00 addr:647
87 | 00642 .29 
89 | 00643 89 tkins_max 0 42                | insert track ParOr_sub_2_42
03 | 00644 .00 addr:793
19 | 00645 .2a 
01 | 00646 01 end                           | end
c8 | 00647 c8 set_c ubyte 465 0             | i = 0
01 | 00648 01 
d1 | 00649 d1 
00 | 00650 00 
c8 | 00651 c8 set_c ubyte 466 7             | __i_0x9ec6b78 = 7
01 | 00652 01 
d2 | 00653 d2 
07 | 00654 07 
98 | 00655 98 push_v ubyte 466              | push __i_0x9ec6b78:ubyte
01 | 00656 01 
d2 | 00657 d2 
98 | 00658 98 push_v ubyte 465              | push i:ubyte
01 | 00659 01 
d1 | 00660 d1 
11 | 00661 11 gte                           | gte
4f | 00662 4f ifelse 69 70                  | ifelse True_69 False_70
02 | 00663 .00 addr:667
9b | 00664 .45 
02 | 00665 .00 addr:675
a3 | 00666 .46 
3d | 00667 3d tkins_z 1 18 48               | insert track Loop_out_48 tree 18
92 | 00668 92 
03 | 00669 .00 addr:786
12 | 00670 .30 
01 | 00671 01 end                           | end
39 | 00672 39 exec 71                       | goto  71
02 | 00673 .00 addr:655
8f | 00674 .2e 
40 | 00675 40 push_c 3                      | push 3
03 | 00676 03 
a0 | 00677 a0 pop ubyte 58                  | evt RECEIVE() auxId = pop
3a | 00678 3a 
d1 | 00679 d1 set_c ushort 59 53            | await RECEIVE()[0]
3b | 00680 3b 
02 | 00681 .00 addr:684
ac | 00682 .35 
01 | 00683 01 end                           | end
5e | 00684 5e getextdt_v 390 25             | getExtData recPos 25
01 | 00685 01 
86 | 00686 86 
19 | 00687 19 
99 | 00688 99 push_v ushort 391                    | push recPos.source [Optm:: push_c addr + deref]
01 | 00689 01 
87 | 00690 87 
40 | 00691 40 push_c 74                     | push_c &sucessores:ushort*
4a | 00692 4a 
40 | 00693 40 push_c 56                     | push idx max 56
38 | 00694 38 
40 | 00695 40 push_c 8                      | push 8
08 | 00696 08 
98 | 00697 98 push_v ubyte 465              | push i:ubyte
01 | 00698 01 
d1 | 00699 d1 
08 | 00700 08 mult                          | mult
07 | 00701 07 mod                           | mod: limmit idx
40 | 00702 40 push_c 2                      | push var len ushort
02 | 00703 02 
08 | 00704 08 mult                          | mult: varlen * idx
06 | 00705 06 add                           | add: array base addr + len position
69 | 00706 69 set_e ushort                  | set (ushort)*(pop1) = pop2
c8 | 00707 c8 set_c ubyte 467 0             | j = 0
01 | 00708 01 
d3 | 00709 d3 
00 | 00710 00 
c8 | 00711 c8 set_c ubyte 468 7             | __j_0x9eca170 = 7
01 | 00712 01 
d4 | 00713 d4 
07 | 00714 07 
98 | 00715 98 push_v ubyte 468              | push __j_0x9eca170:ubyte
01 | 00716 01 
d4 | 00717 d4 
98 | 00718 98 push_v ubyte 467              | push j:ubyte
01 | 00719 01 
d3 | 00720 d3 
11 | 00721 11 gte                           | gte
4f | 00722 4f ifelse 66 67                  | ifelse True_66 False_67
02 | 00723 .00 addr:727
d7 | 00724 .42 
02 | 00725 .00 addr:735
df | 00726 .43 
3d | 00727 3d tkins_z 1 24 59               | insert track Loop_out_59 tree 24
98 | 00728 98 
03 | 00729 .00 addr:779
0b | 00730 .3b 
01 | 00731 01 end                           | end
39 | 00732 39 exec 68                       | goto  68
02 | 00733 .00 addr:715
cb | 00734 .39 
41 | 00735 41 push_c 395                    | push recPos.sucessores
01 | 00736 01 
8b | 00737 8b 
40 | 00738 40 push_c 7                      | push idx max 7
07 | 00739 07 
98 | 00740 98 push_v ubyte 467              | push j:ubyte
01 | 00741 01 
d3 | 00742 d3 
07 | 00743 07 mod                           | mod: limmit idx
40 | 00744 40 push_c 2                      | push var len ushort
02 | 00745 02 
08 | 00746 08 mult                          | mult: varlen * idx
06 | 00747 06 add                           | add: array base addr + len position
71 | 00748 71 deref ushort                  | deref ushort
40 | 00749 40 push_c 74                     | push_c &sucessores:ushort*
4a | 00750 4a 
40 | 00751 40 push_c 56                     | push idx max 56
38 | 00752 38 
98 | 00753 98 push_v ubyte 467              | push j:ubyte
01 | 00754 01 
d3 | 00755 d3 
40 | 00756 40 push_c 1                      | push 1
01 | 00757 01 
40 | 00758 40 push_c 8                      | push 8
08 | 00759 08 
98 | 00760 98 push_v ubyte 465              | push i:ubyte
01 | 00761 01 
d1 | 00762 d1 
08 | 00763 08 mult                          | mult
06 | 00764 06 add                           | add
06 | 00765 06 add                           | add
07 | 00766 07 mod                           | mod: limmit idx
40 | 00767 40 push_c 2                      | push var len ushort
02 | 00768 02 
08 | 00769 08 mult                          | mult: varlen * idx
06 | 00770 06 add                           | add: array base addr + len position
69 | 00771 69 set_e ushort                  | set (ushort)*(pop1) = pop2
41 | 00772 41 push_c 467                    | push &j
01 | 00773 01 
d3 | 00774 d3 
60 | 00775 60 inc ubyte                     | inc ubyte
39 | 00776 39 exec 68                       | goto  68
02 | 00777 .00 addr:715
cb | 00778 .39 
41 | 00779 41 push_c 465                    | push &i
01 | 00780 01 
d1 | 00781 d1 
60 | 00782 60 inc ubyte                     | inc ubyte
39 | 00783 39 exec 71                       | goto  71
02 | 00784 .00 addr:655
8f | 00785 .2e 
48 | 00786 48 memclr 58 2                   | clear EXT gates for RECEIVE()
3a | 00787 3a 
02 | 00788 02 
89 | 00789 89 tkins_max 0 43                | insert track ParOr_out_43
03 | 00790 .00 addr:805
25 | 00791 .2b 
01 | 00792 01 end                           | end
29 | 00793 29 clken_c 0 2000 72             | clock enable Awake_2000_72 2000msec
03 | 00794 03 
00 | 00795 00 
07 | 00796 07 
d0 | 00797 d0 
03 | 00798 .00 addr:801
21 | 00799 .48 
01 | 00800 01 end                           | end
89 | 00801 89 tkins_max 0 43                | insert track ParOr_out_43
03 | 00802 .00 addr:805
25 | 00803 .2b 
01 | 00804 01 end                           | end
48 | 00805 48 memclr 0 8                    | clear WClocks gates from 0 to 1
00 | 00806 00 
08 | 00807 08 
48 | 00808 48 memclr 58 2                   | clear EXT gates for RECEIVE()
3a | 00809 3a 
02 | 00810 02 
39 | 00811 39 exec 21                       | goto  21
02 | 00812 .00 addr:582
46 | 00813 .15 
48 | 00814 48 memclr 0 8                    | clear WClocks gates from 0 to 1
00 | 00815 00 
08 | 00816 08 
48 | 00817 48 memclr 46 2                   | clear EXT gates for SEND_DONE
2e | 00818 2e 
02 | 00819 02 
48 | 00820 48 memclr 58 2                   | clear EXT gates for RECEIVE()
3a | 00821 3a 
02 | 00822 02 
01 | 00823 01 end                           | end
40 | 00824 40 push_c 2                      | push 2
02 | 00825 02 
a0 | 00826 a0 pop ubyte 61                  | evt RECEIVE() auxId = pop
3d | 00827 3d 
d1 | 00828 d1 set_c ushort 62 76            | await RECEIVE()[1]
3e | 00829 3e 
03 | 00830 .00 addr:833
41 | 00831 .4c 
01 | 00832 01 end                           | end
5e | 00833 5e getextdt_v 440 25             | getExtData recAlert 25
01 | 00834 01 
b8 | 00835 b8 
19 | 00836 19 
40 | 00837 40 push_c 2                      | push 2
02 | 00838 02 
98 | 00839 98 push_v ubyte 440                    | push recAlert.type [Optm:: push_c addr + deref]
01 | 00840 01 
b8 | 00841 b8 
0f | 00842 0f eq                            | eq
4f | 00843 4f ifelse 91 92                  | ifelse True_91 EndIf_92
03 | 00844 .00 addr:848
50 | 00845 .5b 
03 | 00846 .00 addr:824
38 | 00847 .49 
58 | 00848 58 outevt_c 6 1                  | emit LED0 len=1 const=1
06 | 00849 06 
01 | 00850 01 
58 | 00851 58 outevt_c 7 1                  | emit LED1 len=1 const=1
07 | 00852 07 
01 | 00853 01 
58 | 00854 58 outevt_c 8 1                  | emit LED2 len=1 const=1
08 | 00855 08 
01 | 00856 01 
29 | 00857 29 clken_c 1 3000 84             | clock enable Awake_3000_84 3000msec
03 | 00858 03 
01 | 00859 01 
0b | 00860 0b 
b8 | 00861 b8 
03 | 00862 .00 addr:865
61 | 00863 .54 
01 | 00864 01 end                           | end
58 | 00865 58 outevt_c 6 0                  | emit LED0 len=1 const=0
06 | 00866 06 
00 | 00867 00 
58 | 00868 58 outevt_c 7 0                  | emit LED1 len=1 const=0
07 | 00869 07 
00 | 00870 00 
58 | 00871 58 outevt_c 8 0                  | emit LED2 len=1 const=0
08 | 00872 08 
00 | 00873 00 
39 | 00874 39 exec 92                       | goto  92
03 | 00875 .00 addr:824
38 | 00876 .49 
48 | 00877 48 memclr 8 8                    | clear WClocks gates from 1 to 2
08 | 00878 08 
08 | 00879 08 
48 | 00880 48 memclr 58 2                   | clear EXT gates for RECEIVE()
3a | 00881 3a 
02 | 00882 02 
01 | 00883 01 end                           | end
39 | 00884 39 exec 245                      | goto  245
02 | 00885 .00 addr:565
35 | 00886 .0c 
89 | 00887 89 tkins_max 0 93                | insert track ParEver_sub_1_93
03 | 00888 .00 addr:894
7e | 00889 .5d 
89 | 00890 89 tkins_max 0 94                | insert track ParEver_sub_2_94
04 | 00891 .00 addr:1238
d6 | 00892 .5e 
01 | 00893 01 end                           | end
89 | 00894 89 tkins_max 0 98                | insert track ParEver_sub_1_98
03 | 00895 .00 addr:901
85 | 00896 .62 
89 | 00897 89 tkins_max 0 99                | insert track ParEver_sub_2_99
04 | 00898 .00 addr:1192
a8 | 00899 .63 
01 | 00900 01 end                           | end
40 | 00901 40 push_c 1                      | push 1
01 | 00902 01 
a0 | 00903 a0 pop ubyte 64                  | evt RECEIVE() auxId = pop
40 | 00904 40 
d1 | 00905 d1 set_c ushort 65 106           | await RECEIVE()[2]
41 | 00906 41 
03 | 00907 .00 addr:910
8e | 00908 .6a 
01 | 00909 01 end                           | end
5c | 00910 5c getextdt_v 228 25             | getExtData recPath 25
e4 | 00911 e4 
19 | 00912 19 
92 | 00913 92 push_v ulong 209                    | push sendPath.versao_rota [Optm:: push_c addr + deref]
d1 | 00914 d1 
92 | 00915 92 push_v ulong 234                    | push recPath.versao_rota [Optm:: push_c addr + deref]
ea | 00916 ea 
13 | 00917 13 gt                            | gt
4f | 00918 4f ifelse 166 167                | ifelse True_166 False_167
03 | 00919 .00 addr:923
9b | 00920 .a6 
03 | 00921 .00 addr:901
85 | 00922 .67 
2a | 00923 2a set_v ushort 465 ushort 229   | progenitor = recPath.source
91 | 00924 91 
01 | 00925 01 
d1 | 00926 d1 
e5 | 00927 e5 
2a | 00928 2a set_v ushort 418 ushort 465   | sendAlert.target = progenitor
99 | 00929 99 
01 | 00930 01 
a2 | 00931 a2 
01 | 00932 01 
d1 | 00933 d1 
40 | 00934 40 push_c 1                      | push 1
01 | 00935 01 
90 | 00936 90 push_v ubyte 233                    | push recPath.num_saltos [Optm:: push_c addr + deref]
e9 | 00937 e9 
06 | 00938 06 add                           | add
a0 | 00939 a0 pop ubyte 208                 | pop sendPath.num_saltos
d0 | 00940 d0 
2a | 00941 2a set_v ulong 209 ulong 234     | sendPath.versao_rota = recPath.versao_rota
22 | 00942 22 
d1 | 00943 d1 
ea | 00944 ea 
b1 | 00945 b1 outevt_v 40 203               | emit SEND len=25 var=sendPath
28 | 00946 28 
cb | 00947 cb 
d1 | 00948 d1 set_c ushort 48 116           | await SEND_DONE[1]
30 | 00949 30 
03 | 00950 .00 addr:953
b9 | 00951 .74 
01 | 00952 01 end                           | end
c8 | 00953 c8 set_c ubyte 467 0             | i = 0
01 | 00954 01 
d3 | 00955 d3 
00 | 00956 00 
c8 | 00957 c8 set_c ubyte 468 56            | __i_0x9f6c630 = 56
01 | 00958 01 
d4 | 00959 d4 
38 | 00960 38 
98 | 00961 98 push_v ubyte 468              | push __i_0x9f6c630:ubyte
01 | 00962 01 
d4 | 00963 d4 
98 | 00964 98 push_v ubyte 467              | push i:ubyte
01 | 00965 01 
d3 | 00966 d3 
11 | 00967 11 gte                           | gte
4f | 00968 4f ifelse 126 127                | ifelse True_126 False_127
03 | 00969 .00 addr:973
cd | 00970 .7e 
03 | 00971 .00 addr:981
d5 | 00972 .7f 
3d | 00973 3d tkins_z 1 20 121              | insert track Loop_out_121 tree 20
94 | 00974 94 
03 | 00975 .00 addr:996
e4 | 00976 .79 
01 | 00977 01 end                           | end
39 | 00978 39 exec 128                      | goto  128
03 | 00979 .00 addr:961
c1 | 00980 .77 
2b | 00981 2b setarr_vc ushort 74 ubyte 467 56 0  | sucessores[i] = 0
18 | 00982 18 
00 | 00983 00 
4a | 00984 4a 
01 | 00985 01 
d3 | 00986 d3 
38 | 00987 38 
00 | 00988 00 
41 | 00989 41 push_c 467                    | push &i
01 | 00990 01 
d3 | 00991 d3 
60 | 00992 60 inc ubyte                     | inc ubyte
39 | 00993 39 exec 128                      | goto  128
03 | 00994 .00 addr:961
c1 | 00995 .77 
89 | 00996 89 tkins_max 0 129               | insert track ParOr_sub_1_129
03 | 00997 .00 addr:1003
eb | 00998 .81 
89 | 00999 89 tkins_max 0 130               | insert track ParOr_sub_2_130
04 | 01000 .00 addr:1149
7d | 01001 .82 
01 | 01002 01 end                           | end
c8 | 01003 c8 set_c ubyte 467 0             | i = 0
01 | 01004 01 
d3 | 01005 d3 
00 | 01006 00 
c8 | 01007 c8 set_c ubyte 468 7             | __i_0x9f2cc28 = 7
01 | 01008 01 
d4 | 01009 d4 
07 | 01010 07 
98 | 01011 98 push_v ubyte 468              | push __i_0x9f2cc28:ubyte
01 | 01012 01 
d4 | 01013 d4 
98 | 01014 98 push_v ubyte 467              | push i:ubyte
01 | 01015 01 
d3 | 01016 d3 
11 | 01017 11 gte                           | gte
4f | 01018 4f ifelse 157 158                | ifelse True_157 False_158
03 | 01019 .00 addr:1023
ff | 01020 .9d 
04 | 01021 .00 addr:1031
07 | 01022 .9e 
3d | 01023 3d tkins_z 1 22 136              | insert track Loop_out_136 tree 22
96 | 01024 96 
04 | 01025 .00 addr:1142
76 | 01026 .88 
01 | 01027 01 end                           | end
39 | 01028 39 exec 159                      | goto  159
03 | 01029 .00 addr:1011
f3 | 01030 .86 
40 | 01031 40 push_c 3                      | push 3
03 | 01032 03 
a0 | 01033 a0 pop ubyte 67                  | evt RECEIVE() auxId = pop
43 | 01034 43 
d1 | 01035 d1 set_c ushort 68 141           | await RECEIVE()[3]
44 | 01036 44 
04 | 01037 .00 addr:1040
10 | 01038 .8d 
01 | 01039 01 end                           | end
5e | 01040 5e getextdt_v 390 25             | getExtData recPos 25
01 | 01041 01 
86 | 01042 86 
19 | 01043 19 
99 | 01044 99 push_v ushort 391                    | push recPos.source [Optm:: push_c addr + deref]
01 | 01045 01 
87 | 01046 87 
40 | 01047 40 push_c 74                     | push_c &sucessores:ushort*
4a | 01048 4a 
40 | 01049 40 push_c 56                     | push idx max 56
38 | 01050 38 
40 | 01051 40 push_c 8                      | push 8
08 | 01052 08 
98 | 01053 98 push_v ubyte 467              | push i:ubyte
01 | 01054 01 
d3 | 01055 d3 
08 | 01056 08 mult                          | mult
07 | 01057 07 mod                           | mod: limmit idx
40 | 01058 40 push_c 2                      | push var len ushort
02 | 01059 02 
08 | 01060 08 mult                          | mult: varlen * idx
06 | 01061 06 add                           | add: array base addr + len position
69 | 01062 69 set_e ushort                  | set (ushort)*(pop1) = pop2
c8 | 01063 c8 set_c ubyte 469 0             | j = 0
01 | 01064 01 
d5 | 01065 d5 
00 | 01066 00 
c8 | 01067 c8 set_c ubyte 470 7             | __j_0x9eb3900 = 7
01 | 01068 01 
d6 | 01069 d6 
07 | 01070 07 
98 | 01071 98 push_v ubyte 470              | push __j_0x9eb3900:ubyte
01 | 01072 01 
d6 | 01073 d6 
98 | 01074 98 push_v ubyte 469              | push j:ubyte
01 | 01075 01 
d5 | 01076 d5 
11 | 01077 11 gte                           | gte
4f | 01078 4f ifelse 154 155                | ifelse True_154 False_155
04 | 01079 .00 addr:1083
3b | 01080 .9a 
04 | 01081 .00 addr:1091
43 | 01082 .9b 
3d | 01083 3d tkins_z 1 28 147              | insert track Loop_out_147 tree 28
9c | 01084 9c 
04 | 01085 .00 addr:1135
6f | 01086 .93 
01 | 01087 01 end                           | end
39 | 01088 39 exec 156                      | goto  156
04 | 01089 .00 addr:1071
2f | 01090 .91 
41 | 01091 41 push_c 395                    | push recPos.sucessores
01 | 01092 01 
8b | 01093 8b 
40 | 01094 40 push_c 7                      | push idx max 7
07 | 01095 07 
98 | 01096 98 push_v ubyte 469              | push j:ubyte
01 | 01097 01 
d5 | 01098 d5 
07 | 01099 07 mod                           | mod: limmit idx
40 | 01100 40 push_c 2                      | push var len ushort
02 | 01101 02 
08 | 01102 08 mult                          | mult: varlen * idx
06 | 01103 06 add                           | add: array base addr + len position
71 | 01104 71 deref ushort                  | deref ushort
40 | 01105 40 push_c 74                     | push_c &sucessores:ushort*
4a | 01106 4a 
40 | 01107 40 push_c 56                     | push idx max 56
38 | 01108 38 
98 | 01109 98 push_v ubyte 469              | push j:ubyte
01 | 01110 01 
d5 | 01111 d5 
40 | 01112 40 push_c 1                      | push 1
01 | 01113 01 
40 | 01114 40 push_c 8                      | push 8
08 | 01115 08 
98 | 01116 98 push_v ubyte 467              | push i:ubyte
01 | 01117 01 
d3 | 01118 d3 
08 | 01119 08 mult                          | mult
06 | 01120 06 add                           | add
06 | 01121 06 add                           | add
07 | 01122 07 mod                           | mod: limmit idx
40 | 01123 40 push_c 2                      | push var len ushort
02 | 01124 02 
08 | 01125 08 mult                          | mult: varlen * idx
06 | 01126 06 add                           | add: array base addr + len position
69 | 01127 69 set_e ushort                  | set (ushort)*(pop1) = pop2
41 | 01128 41 push_c 469                    | push &j
01 | 01129 01 
d5 | 01130 d5 
60 | 01131 60 inc ubyte                     | inc ubyte
39 | 01132 39 exec 156                      | goto  156
04 | 01133 .00 addr:1071
2f | 01134 .91 
41 | 01135 41 push_c 467                    | push &i
01 | 01136 01 
d3 | 01137 d3 
60 | 01138 60 inc ubyte                     | inc ubyte
39 | 01139 39 exec 159                      | goto  159
03 | 01140 .00 addr:1011
f3 | 01141 .86 
48 | 01142 48 memclr 58 2                   | clear EXT gates for RECEIVE()
3a | 01143 3a 
02 | 01144 02 
89 | 01145 89 tkins_max 0 131               | insert track ParOr_out_131
04 | 01146 .00 addr:1161
89 | 01147 .83 
01 | 01148 01 end                           | end
29 | 01149 29 clken_c 2 2000 160            | clock enable Awake_2000_160 2000msec
03 | 01150 03 
02 | 01151 02 
07 | 01152 07 
d0 | 01153 d0 
04 | 01154 .00 addr:1157
85 | 01155 .a0 
01 | 01156 01 end                           | end
89 | 01157 89 tkins_max 0 131               | insert track ParOr_out_131
04 | 01158 .00 addr:1161
89 | 01159 .83 
01 | 01160 01 end                           | end
48 | 01161 48 memclr 16 8                   | clear WClocks gates from 2 to 3
10 | 01162 10 
08 | 01163 08 
48 | 01164 48 memclr 58 2                   | clear EXT gates for RECEIVE()
3a | 01165 3a 
02 | 01166 02 
2a | 01167 2a set_v ushort 368 ushort 465   | sendPos.target = progenitor
99 | 01168 99 
01 | 01169 01 
70 | 01170 70 
01 | 01171 01 
d1 | 01172 d1 
b9 | 01173 b9 outevt_v 40 365               | emit SEND len=25 var=sendPos
28 | 01174 28 
01 | 01175 01 
6d | 01176 6d 
d1 | 01177 d1 set_c ushort 50 165           | await SEND_DONE[2]
32 | 01178 32 
03 | 01179 .00 addr:901
85 | 01180 .67 
01 | 01181 01 end                           | end
48 | 01182 48 memclr 16 8                   | clear WClocks gates from 2 to 3
10 | 01183 10 
08 | 01184 08 
48 | 01185 48 memclr 46 4                   | clear EXT gates for SEND_DONE
2e | 01186 2e 
04 | 01187 04 
48 | 01188 48 memclr 58 4                   | clear EXT gates for RECEIVE()
3a | 01189 3a 
04 | 01190 04 
01 | 01191 01 end                           | end
40 | 01192 40 push_c 2                      | push 2
02 | 01193 02 
a0 | 01194 a0 pop ubyte 70                  | evt RECEIVE() auxId = pop
46 | 01195 46 
d1 | 01196 d1 set_c ushort 71 172           | await RECEIVE()[4]
47 | 01197 47 
04 | 01198 .00 addr:1201
b1 | 01199 .ac 
01 | 01200 01 end                           | end
5e | 01201 5e getextdt_v 440 25             | getExtData recAlert 25
01 | 01202 01 
b8 | 01203 b8 
19 | 01204 19 
40 | 01205 40 push_c 2                      | push 2
02 | 01206 02 
98 | 01207 98 push_v ubyte 440                    | push recAlert.type [Optm:: push_c addr + deref]
01 | 01208 01 
b8 | 01209 b8 
0f | 01210 0f eq                            | eq
4f | 01211 4f ifelse 178 179                | ifelse True_178 EndIf_179
04 | 01212 .00 addr:1216
c0 | 01213 .b2 
04 | 01214 .00 addr:1225
c9 | 01215 .b3 
b9 | 01216 b9 outevt_v 40 415               | emit SEND len=25 var=sendAlert
28 | 01217 28 
01 | 01218 01 
9f | 01219 9f 
d1 | 01220 d1 set_c ushort 52 177           | await SEND_DONE[3]
34 | 01221 34 
04 | 01222 .00 addr:1225
c9 | 01223 .b3 
01 | 01224 01 end                           | end
58 | 01225 58 outevt_c 6 0                  | emit LED0 len=1 const=0
06 | 01226 06 
00 | 01227 00 
39 | 01228 39 exec 169                      | goto  169
04 | 01229 .00 addr:1192
a8 | 01230 .a9 
48 | 01231 48 memclr 46 2                   | clear EXT gates for SEND_DONE
2e | 01232 2e 
02 | 01233 02 
48 | 01234 48 memclr 58 2                   | clear EXT gates for RECEIVE()
3a | 01235 3a 
02 | 01236 02 
01 | 01237 01 end                           | end
c8 | 01238 c8 set_c ubyte 471 0             | i = 0
01 | 01239 01 
d7 | 01240 d7 
00 | 01241 00 
c8 | 01242 c8 set_c ubyte 472 4             | __i_0x9ebcf88 = 4
01 | 01243 01 
d8 | 01244 d8 
04 | 01245 04 
98 | 01246 98 push_v ubyte 472              | push __i_0x9ebcf88:ubyte
01 | 01247 01 
d8 | 01248 d8 
98 | 01249 98 push_v ubyte 471              | push i:ubyte
01 | 01250 01 
d7 | 01251 d7 
11 | 01252 11 gte                           | gte
4f | 01253 4f ifelse 191 192                | ifelse True_191 False_192
04 | 01254 .00 addr:1258
ea | 01255 .bf 
04 | 01256 .00 addr:1266
f2 | 01257 .c0 
3d | 01258 3d tkins_z 1 13 186              | insert track Loop_out_186 tree 13
8d | 01259 8d 
05 | 01260 .00 addr:1281
01 | 01261 .ba 
01 | 01262 01 end                           | end
39 | 01263 39 exec 193                      | goto  193
04 | 01264 .00 addr:1246
de | 01265 .b8 
2b | 01266 2b setarr_vc ushort 191 ubyte 471 4 0  | temps[i] = 0
18 | 01267 18 
00 | 01268 00 
bf | 01269 bf 
01 | 01270 01 
d7 | 01271 d7 
04 | 01272 04 
00 | 01273 00 
41 | 01274 41 push_c 471                    | push &i
01 | 01275 01 
d7 | 01276 d7 
60 | 01277 60 inc ubyte                     | inc ubyte
39 | 01278 39 exec 193                      | goto  193
04 | 01279 .00 addr:1246
de | 01280 .b8 
c8 | 01281 c8 set_c ubyte 471 0             | i = 0
01 | 01282 01 
d7 | 01283 d7 
00 | 01284 00 
c8 | 01285 c8 set_c ubyte 472 4             | __i_0x9e954e0 = 4
01 | 01286 01 
d8 | 01287 d8 
04 | 01288 04 
98 | 01289 98 push_v ubyte 472              | push __i_0x9e954e0:ubyte
01 | 01290 01 
d8 | 01291 d8 
98 | 01292 98 push_v ubyte 471              | push i:ubyte
01 | 01293 01 
d7 | 01294 d7 
11 | 01295 11 gte                           | gte
4f | 01296 4f ifelse 240 241                | ifelse True_240 False_241
05 | 01297 .00 addr:1301
15 | 01298 .f0 
05 | 01299 .00 addr:1309
1d | 01300 .f1 
3d | 01301 3d tkins_z 1 16 201              | insert track Loop_out_201 tree 16
90 | 01302 90 
05 | 01303 .00 addr:1437
9d | 01304 .c9 
01 | 01305 01 end                           | end
39 | 01306 39 exec 242                      | goto  242
05 | 01307 .00 addr:1289
09 | 01308 .c7 
29 | 01309 29 clken_c 3 3000 206            | clock enable Awake_3000_206 3000msec
03 | 01310 03 
03 | 01311 03 
0b | 01312 0b 
b8 | 01313 b8 
05 | 01314 .00 addr:1317
25 | 01315 .ce 
01 | 01316 01 end                           | end
26 | 01317 26 outevt_z 9                    | emit REQ_TEMP
09 | 01318 09 
d1 | 01319 d1 set_c ushort 42 209           | await TEMP[0]
2a | 01320 2a 
05 | 01321 .00 addr:1324
2c | 01322 .d1 
01 | 01323 01 end                           | end
32 | 01324 32 pusharr_v ushort 191 ubyte 471 4  | pusharr_v &temps[i]
18 | 01325 18 
bf | 01326 bf 
01 | 01327 01 
d7 | 01328 d7 
04 | 01329 04 
34 | 01330 34 getextdt_e 2                  | getExtData stack len=2
02 | 01331 02 
c1 | 01332 c1 set_c ushort 199 0            | temp = 0
c7 | 01333 c7 
00 | 01334 00 
c8 | 01335 c8 set_c ubyte 473 0             | j = 0
01 | 01336 01 
d9 | 01337 d9 
00 | 01338 00 
c8 | 01339 c8 set_c ubyte 474 4             | __j_0x9f1dd18 = 4
01 | 01340 01 
da | 01341 da 
04 | 01342 04 
98 | 01343 98 push_v ubyte 474              | push __j_0x9f1dd18:ubyte
01 | 01344 01 
da | 01345 da 
98 | 01346 98 push_v ubyte 473              | push j:ubyte
01 | 01347 01 
d9 | 01348 d9 
11 | 01349 11 gte                           | gte
4f | 01350 4f ifelse 222 223                | ifelse True_222 False_223
05 | 01351 .00 addr:1355
4b | 01352 .de 
05 | 01353 .00 addr:1363
53 | 01354 .df 
3d | 01355 3d tkins_z 1 22 214              | insert track Loop_out_214 tree 22
96 | 01356 96 
05 | 01357 .00 addr:1382
66 | 01358 .d6 
01 | 01359 01 end                           | end
39 | 01360 39 exec 224                      | goto  224
05 | 01361 .00 addr:1343
3f | 01362 .d4 
32 | 01363 32 pusharr_v ushort 191 ubyte 471 4  | pusharr_v &temps[i]
18 | 01364 18 
bf | 01365 bf 
01 | 01366 01 
d7 | 01367 d7 
04 | 01368 04 
71 | 01369 71 deref ushort                  | deref ushort
91 | 01370 91 push_v ushort 199             | push temp:ushort
c7 | 01371 c7 
06 | 01372 06 add                           | add
a1 | 01373 a1 pop ushort 199                | pop temp
c7 | 01374 c7 
41 | 01375 41 push_c 473                    | push &j
01 | 01376 01 
d9 | 01377 d9 
60 | 01378 60 inc ubyte                     | inc ubyte
39 | 01379 39 exec 224                      | goto  224
05 | 01380 .00 addr:1343
3f | 01381 .d4 
40 | 01382 40 push_c 4                      | push 4
04 | 01383 04 
91 | 01384 91 push_v ushort 199             | push temp:ushort
c7 | 01385 c7 
09 | 01386 09 div                           | div
a1 | 01387 a1 pop ushort 201                | pop med_temp
c9 | 01388 c9 
41 | 01389 41 push_c 500                    | push 500
01 | 01390 01 
f4 | 01391 f4 
91 | 01392 91 push_v ushort 201             | push med_temp:ushort
c9 | 01393 c9 
13 | 01394 13 gt                            | gt
4f | 01395 4f ifelse 237 238                | ifelse True_237 False_238
05 | 01396 .00 addr:1400
78 | 01397 .ed 
05 | 01398 .00 addr:1424
90 | 01399 .ee 
2a | 01400 2a set_v ushort 189 ushort 201   | alta_temp = med_temp
11 | 01401 11 
bd | 01402 bd 
c9 | 01403 c9 
58 | 01404 58 outevt_c 8 1                  | emit LED2 len=1 const=1
08 | 01405 08 
01 | 01406 01 
b9 | 01407 b9 outevt_v 40 415               | emit SEND len=25 var=sendAlert
28 | 01408 28 
01 | 01409 01 
9f | 01410 9f 
d1 | 01411 d1 set_c ushort 54 233           | await SEND_DONE[4]
36 | 01412 36 
05 | 01413 .00 addr:1416
88 | 01414 .e9 
01 | 01415 01 end                           | end
29 | 01416 29 clken_c 4 4000 234            | clock enable Awake_4000_234 4000msec
03 | 01417 03 
04 | 01418 04 
0f | 01419 0f 
a0 | 01420 a0 
05 | 01421 .00 addr:1430
96 | 01422 .ef 
01 | 01423 01 end                           | end
58 | 01424 58 outevt_c 8 0                  | emit LED2 len=1 const=0
08 | 01425 08 
00 | 01426 00 
39 | 01427 39 exec 239                      | goto  239
05 | 01428 .00 addr:1430
96 | 01429 .ef 
41 | 01430 41 push_c 471                    | push &i
01 | 01431 01 
d7 | 01432 d7 
60 | 01433 60 inc ubyte                     | inc ubyte
39 | 01434 39 exec 242                      | goto  242
05 | 01435 .00 addr:1289
09 | 01436 .c7 
48 | 01437 48 memclr 24 16                  | clear WClocks gates from 3 to 5
18 | 01438 18 
10 | 01439 10 
48 | 01440 48 memclr 42 2                   | clear EXT gates for TEMP
2a | 01441 2a 
02 | 01442 02 
48 | 01443 48 memclr 46 2                   | clear EXT gates for SEND_DONE
2e | 01444 2e 
02 | 01445 02 
39 | 01446 39 exec 194                      | goto  194
05 | 01447 .00 addr:1281
01 | 01448 .c2 
48 | 01449 48 memclr 24 16                  | clear WClocks gates from 3 to 5
18 | 01450 18 
10 | 01451 10 
48 | 01452 48 memclr 42 2                   | clear EXT gates for TEMP
2a | 01453 2a 
02 | 01454 02 
48 | 01455 48 memclr 46 2                   | clear EXT gates for SEND_DONE
2e | 01456 2e 
02 | 01457 02 
01 | 01458 01 end                           | end
39 | 01459 39 exec 245                      | goto  245
02 | 01460 .00 addr:565
35 | 01461 .0c 
48 | 01462 48 memclr 0 40                   | clear WClocks gates from 0 to 5
00 | 01463 00 
28 | 01464 28 
48 | 01465 48 memclr 42 2                   | clear EXT gates for TEMP
2a | 01466 2a 
02 | 01467 02 
48 | 01468 48 memclr 46 10                  | clear EXT gates for SEND_DONE
2e | 01469 2e 
0a | 01470 0a 
48 | 01471 48 memclr 58 10                  | clear EXT gates for RECEIVE()
3a | 01472 3a 
0a | 01473 0a 
01 | 01474 01 end                           | end
48 | 01475 48 memclr 0 40                   | clear WClocks gates from 0 to 5
00 | 01476 00 
28 | 01477 28 
01 | 01478 01 end                           | end
