488 1588 4 5 0 0 40 3 40
00 | 00000 0 track 0
00 | 00001 0
00 | 00002 0
00 | 00003 0
00 | 00004 0 track 1
00 | 00005 0
00 | 00006 0
00 | 00007 0
00 | 00008 0 track 2
00 | 00009 0
00 | 00010 0
00 | 00011 0
00 | 00012 0 track 3
00 | 00013 0
00 | 00014 0
00 | 00015 0
00 | 00016 0 track 4
00 | 00017 0
00 | 00018 0
00 | 00019 0
00 | 00020 0000 wClock 0
00 | 00021 0001
00 | 00022 0002
00 | 00023 0003
00 | 00024 0004
00 | 00025 0005
00 | 00026 0006
00 | 00027 0007
00 | 00028 0008 wClock 1
00 | 00029 0009
00 | 00030 0010
00 | 00031 0011
00 | 00032 0012
00 | 00033 0013
00 | 00034 0014
00 | 00035 0015
00 | 00036 0016 wClock 2
00 | 00037 0017
00 | 00038 0018
00 | 00039 0019
00 | 00040 0020
00 | 00041 0021
00 | 00042 0022
00 | 00043 0023
00 | 00044 0024 wClock 3
00 | 00045 0025
00 | 00046 0026
00 | 00047 0027
00 | 00048 0028
00 | 00049 0029
00 | 00050 0030
00 | 00051 0031
00 | 00052 0032 wClock 4
00 | 00053 0033
00 | 00054 0034
00 | 00055 0035
00 | 00056 0036
00 | 00057 0037
00 | 00058 0038
00 | 00059 0039
00 | 00060 0040 inEvt 005 : TEMP
00 | 00061 0041           : 01 gates
00 | 00062 0042
00 | 00063 0043
00 | 00064 0044 inEvt 041 : SEND_DONE
00 | 00065 0045           : 05 gates
00 | 00066 0046
00 | 00067 0047
00 | 00068 0048
00 | 00069 0049
00 | 00070 0050
00 | 00071 0051
00 | 00072 0052
00 | 00073 0053
00 | 00074 0054
00 | 00075 0055
00 | 00076 0056 inEvt 044 : RECEIVE()
00 | 00077 0057           : 04 gates
00 | 00078 0058
00 | 00079 0059
00 | 00080 0060
00 | 00081 0061
00 | 00082 0062
00 | 00083 0063
00 | 00084 0064
00 | 00085 0065
00 | 00086 0066
00 | 00087 0067
00 | 00088 0068
00 | 00089 0069
00 | 00090 0070 $ret:1, 
00 | 00091 0071 sucessores:210, 
00 | 00092 0072 
00 | 00093 0073 
00 | 00094 0074 
00 | 00095 0075 
00 | 00096 0076 
00 | 00097 0077 
00 | 00098 0078 
00 | 00099 0079 
00 | 00100 0080 
00 | 00101 0081 
00 | 00102 0082 
00 | 00103 0083 
00 | 00104 0084 
00 | 00105 0085 
00 | 00106 0086 
00 | 00107 0087 
00 | 00108 0088 
00 | 00109 0089 
00 | 00110 0090 
00 | 00111 0091 
00 | 00112 0092 
00 | 00113 0093 
00 | 00114 0094 
00 | 00115 0095 
00 | 00116 0096 
00 | 00117 0097 
00 | 00118 0098 
00 | 00119 0099 
00 | 00120 0100 
00 | 00121 0101 
00 | 00122 0102 
00 | 00123 0103 
00 | 00124 0104 
00 | 00125 0105 
00 | 00126 0106 
00 | 00127 0107 
00 | 00128 0108 
00 | 00129 0109 
00 | 00130 0110 
00 | 00131 0111 
00 | 00132 0112 
00 | 00133 0113 
00 | 00134 0114 
00 | 00135 0115 
00 | 00136 0116 
00 | 00137 0117 
00 | 00138 0118 
00 | 00139 0119 
00 | 00140 0120 
00 | 00141 0121 
00 | 00142 0122 
00 | 00143 0123 
00 | 00144 0124 
00 | 00145 0125 
00 | 00146 0126 
00 | 00147 0127 
00 | 00148 0128 
00 | 00149 0129 
00 | 00150 0130 
00 | 00151 0131 
00 | 00152 0132 
00 | 00153 0133 
00 | 00154 0134 
00 | 00155 0135 
00 | 00156 0136 
00 | 00157 0137 
00 | 00158 0138 
00 | 00159 0139 
00 | 00160 0140 
00 | 00161 0141 
00 | 00162 0142 
00 | 00163 0143 
00 | 00164 0144 
00 | 00165 0145 
00 | 00166 0146 
00 | 00167 0147 
00 | 00168 0148 
00 | 00169 0149 
00 | 00170 0150 
00 | 00171 0151 
00 | 00172 0152 
00 | 00173 0153 
00 | 00174 0154 
00 | 00175 0155 
00 | 00176 0156 
00 | 00177 0157 
00 | 00178 0158 
00 | 00179 0159 
00 | 00180 0160 
00 | 00181 0161 
00 | 00182 0162 
00 | 00183 0163 
00 | 00184 0164 
00 | 00185 0165 
00 | 00186 0166 
00 | 00187 0167 
00 | 00188 0168 
00 | 00189 0169 
00 | 00190 0170 
00 | 00191 0171 
00 | 00192 0172 
00 | 00193 0173 
00 | 00194 0174 
00 | 00195 0175 
00 | 00196 0176 
00 | 00197 0177 
00 | 00198 0178 
00 | 00199 0179 
00 | 00200 0180 
00 | 00201 0181 
00 | 00202 0182 
00 | 00203 0183 
00 | 00204 0184 
00 | 00205 0185 
00 | 00206 0186 
00 | 00207 0187 
00 | 00208 0188 
00 | 00209 0189 
00 | 00210 0190 
00 | 00211 0191 
00 | 00212 0192 
00 | 00213 0193 
00 | 00214 0194 
00 | 00215 0195 
00 | 00216 0196 
00 | 00217 0197 
00 | 00218 0198 
00 | 00219 0199 
00 | 00220 0200 
00 | 00221 0201 
00 | 00222 0202 
00 | 00223 0203 
00 | 00224 0204 
00 | 00225 0205 
00 | 00226 0206 
00 | 00227 0207 
00 | 00228 0208 
00 | 00229 0209 
00 | 00230 0210 
00 | 00231 0211 
00 | 00232 0212 
00 | 00233 0213 
00 | 00234 0214 
00 | 00235 0215 
00 | 00236 0216 
00 | 00237 0217 
00 | 00238 0218 
00 | 00239 0219 
00 | 00240 0220 
00 | 00241 0221 
00 | 00242 0222 
00 | 00243 0223 
00 | 00244 0224 
00 | 00245 0225 
00 | 00246 0226 
00 | 00247 0227 
00 | 00248 0228 
00 | 00249 0229 
00 | 00250 0230 
00 | 00251 0231 
00 | 00252 0232 
00 | 00253 0233 
00 | 00254 0234 
00 | 00255 0235 
00 | 00256 0236 
00 | 00257 0237 
00 | 00258 0238 
00 | 00259 0239 
00 | 00260 0240 
00 | 00261 0241 
00 | 00262 0242 
00 | 00263 0243 
00 | 00264 0244 
00 | 00265 0245 
00 | 00266 0246 
00 | 00267 0247 
00 | 00268 0248 
00 | 00269 0249 
00 | 00270 0250 
00 | 00271 0251 
00 | 00272 0252 
00 | 00273 0253 
00 | 00274 0254 
00 | 00275 0255 
00 | 00276 0256 
00 | 00277 0257 
00 | 00278 0258 
00 | 00279 0259 
00 | 00280 0260 
00 | 00281 0261 
00 | 00282 0262 
00 | 00283 0263 
00 | 00284 0264 
00 | 00285 0265 
00 | 00286 0266 
00 | 00287 0267 
00 | 00288 0268 
00 | 00289 0269 
00 | 00290 0270 
00 | 00291 0271 
00 | 00292 0272 
00 | 00293 0273 
00 | 00294 0274 
00 | 00295 0275 
00 | 00296 0276 
00 | 00297 0277 
00 | 00298 0278 
00 | 00299 0279 
00 | 00300 0280 
00 | 00301 0281 progenitor:2, 
00 | 00302 0282 
00 | 00303 0283 fila:1, 
00 | 00304 0284 nodeId:2, 
00 | 00305 0285 
00 | 00306 0286 alta_temp:2, 
00 | 00307 0287 
00 | 00308 0288 temps:8, 
00 | 00309 0289 
00 | 00310 0290 
00 | 00311 0291 
00 | 00312 0292 
00 | 00313 0293 
00 | 00314 0294 
00 | 00315 0295 
00 | 00316 0296 temp:2, 
00 | 00317 0297 
00 | 00318 0298 med_temp:2, 
00 | 00319 0299 
00 | 00320 0300 sendPath:25, 
00 | 00321 0301 
00 | 00322 0302 
00 | 00323 0303 
00 | 00324 0304 
00 | 00325 0305 
00 | 00326 0306 
00 | 00327 0307 
00 | 00328 0308 
00 | 00329 0309 
00 | 00330 0310 
00 | 00331 0311 
00 | 00332 0312 
00 | 00333 0313 
00 | 00334 0314 
00 | 00335 0315 
00 | 00336 0316 
00 | 00337 0317 
00 | 00338 0318 
00 | 00339 0319 
00 | 00340 0320 
00 | 00341 0321 
00 | 00342 0322 
00 | 00343 0323 
00 | 00344 0324 
00 | 00345 0325 recPath:25, 
00 | 00346 0326 
00 | 00347 0327 
00 | 00348 0328 
00 | 00349 0329 
00 | 00350 0330 
00 | 00351 0331 
00 | 00352 0332 
00 | 00353 0333 
00 | 00354 0334 
00 | 00355 0335 
00 | 00356 0336 
00 | 00357 0337 
00 | 00358 0338 
00 | 00359 0339 
00 | 00360 0340 
00 | 00361 0341 
00 | 00362 0342 
00 | 00363 0343 
00 | 00364 0344 
00 | 00365 0345 
00 | 00366 0346 
00 | 00367 0347 
00 | 00368 0348 
00 | 00369 0349 
00 | 00370 0350 sendPos:25, 
00 | 00371 0351 
00 | 00372 0352 
00 | 00373 0353 
00 | 00374 0354 
00 | 00375 0355 
00 | 00376 0356 
00 | 00377 0357 
00 | 00378 0358 
00 | 00379 0359 
00 | 00380 0360 
00 | 00381 0361 
00 | 00382 0362 
00 | 00383 0363 
00 | 00384 0364 
00 | 00385 0365 
00 | 00386 0366 
00 | 00387 0367 
00 | 00388 0368 
00 | 00389 0369 
00 | 00390 0370 
00 | 00391 0371 
00 | 00392 0372 
00 | 00393 0373 
00 | 00394 0374 
00 | 00395 0375 recPos:25, 
00 | 00396 0376 
00 | 00397 0377 
00 | 00398 0378 
00 | 00399 0379 
00 | 00400 0380 
00 | 00401 0381 
00 | 00402 0382 
00 | 00403 0383 
00 | 00404 0384 
00 | 00405 0385 
00 | 00406 0386 
00 | 00407 0387 
00 | 00408 0388 
00 | 00409 0389 
00 | 00410 0390 
00 | 00411 0391 
00 | 00412 0392 
00 | 00413 0393 
00 | 00414 0394 
00 | 00415 0395 
00 | 00416 0396 
00 | 00417 0397 
00 | 00418 0398 
00 | 00419 0399 
00 | 00420 0400 sendAlert:25, 
00 | 00421 0401 
00 | 00422 0402 
00 | 00423 0403 
00 | 00424 0404 
00 | 00425 0405 
00 | 00426 0406 
00 | 00427 0407 
00 | 00428 0408 
00 | 00429 0409 
00 | 00430 0410 
00 | 00431 0411 
00 | 00432 0412 
00 | 00433 0413 
00 | 00434 0414 
00 | 00435 0415 
00 | 00436 0416 
00 | 00437 0417 
00 | 00438 0418 
00 | 00439 0419 
00 | 00440 0420 
00 | 00441 0421 
00 | 00442 0422 
00 | 00443 0423 
00 | 00444 0424 
00 | 00445 0425 recAlert:25, 
00 | 00446 0426 
00 | 00447 0427 
00 | 00448 0428 
00 | 00449 0429 
00 | 00450 0430 
00 | 00451 0431 
00 | 00452 0432 
00 | 00453 0433 
00 | 00454 0434 
00 | 00455 0435 
00 | 00456 0436 
00 | 00457 0437 
00 | 00458 0438 
00 | 00459 0439 
00 | 00460 0440 
00 | 00461 0441 
00 | 00462 0442 
00 | 00463 0443 
00 | 00464 0444 
00 | 00465 0445 
00 | 00466 0446 
00 | 00467 0447 
00 | 00468 0448 
00 | 00469 0449 
00 | 00470 0450 index:2, 
00 | 00471 0451 
00 | 00472 0452 i:1, index:2, 
00 | 00473 0453 __i_0x96b6e20:1, 
00 | 00474 0454 i:1, i:1, 
00 | 00475 0455 __i_0x96d0e00:1, __i_0x96c4040:1, 
00 | 00476 0456 j:1, 
00 | 00477 0457 __j_0x9651240:1, 
00 | 00478 0458 i:2, 
00 | 00479 0459 
00 | 00480 0460 n:2, 
00 | 00481 0461 
00 | 00482 0462 __n_0x96b2be0:2, 
00 | 00483 0463 
00 | 00484 0464 i:1, i:1, 
00 | 00485 0465 __i_0x96c6110:1, __i_0x96e3770:1, 
00 | 00486 0466 j:1, 
00 | 00487 0467 __j_0x9697c98:1, 
d1 | 00488 d1 set_c ushort 40 1281          | config gate TEMP with 1 await(s) - 0x0501 = 1281
28 | 00489 28 
05 | 00490 05 
01 | 00491 01 
d1 | 00492 d1 set_c ushort 44 10501         | config gate SEND_DONE with 5 await(s) - 0x2905 = 10501
2c | 00493 2c 
29 | 00494 29 
05 | 00495 05 
d1 | 00496 d1 set_c ushort 56 11396         | config gate RECEIVE() with 4 await(s) - 0x2c84 = 11396
38 | 00497 38 
2c | 00498 2c 
84 | 00499 84 
24 | 00500 24 func 0                        | func getNodeId
00 | 00501 00 
a9 | 00502 a9 pop ushort 284                | pop nodeId
01 | 00503 01 
1c | 00504 1c 
c9 | 00505 c9 set_c ushort 286 0            | alta_temp = 0
01 | 00506 01 
1e | 00507 1e 
00 | 00508 00 
c9 | 00509 c9 set_c ushort 296 0            | temp = 0
01 | 00510 01 
28 | 00511 28 
00 | 00512 00 
c9 | 00513 c9 set_c ushort 298 0            | med_temp = 0
01 | 00514 01 
2a | 00515 2a 
00 | 00516 00 
c8 | 00517 c8 set_c ubyte 300 1             | sendPath.type = 1
01 | 00518 01 
2c | 00519 2c 
01 | 00520 01 
d9 | 00521 d9 set_c ushort 303 0xffff       | sendPath.target = 0xffff
01 | 00522 01 
2f | 00523 2f 
ff | 00524 ff 
ff | 00525 ff 
2a | 00526 2a set_v ushort 301 ushort 284   | sendPath.source = nodeId
99 | 00527 99 
01 | 00528 01 
2d | 00529 2d 
01 | 00530 01 
1c | 00531 1c 
c8 | 00532 c8 set_c ubyte 305 0             | sendPath.num_saltos = 0
01 | 00533 01 
31 | 00534 31 
00 | 00535 00 
ca | 00536 ca set_c ulong 306 0             | sendPath.versao_rota = 0
01 | 00537 01 
32 | 00538 32 
00 | 00539 00 
c8 | 00540 c8 set_c ubyte 350 3             | sendPos.type = 3
01 | 00541 01 
5e | 00542 5e 
03 | 00543 03 
d9 | 00544 d9 set_c ushort 353 0xffff       | sendPos.target = 0xffff
01 | 00545 01 
61 | 00546 61 
ff | 00547 ff 
ff | 00548 ff 
2a | 00549 2a set_v ushort 351 ushort 284   | sendPos.source = nodeId
99 | 00550 99 
01 | 00551 01 
5f | 00552 5f 
01 | 00553 01 
1c | 00554 1c 
d9 | 00555 d9 set_c ushort 403 0xffff       | sendAlert.target = 0xffff
01 | 00556 01 
93 | 00557 93 
ff | 00558 ff 
ff | 00559 ff 
c8 | 00560 c8 set_c ubyte 400 2             | sendAlert.type = 2
01 | 00561 01 
90 | 00562 90 
02 | 00563 02 
2a | 00564 2a set_v ushort 401 ushort 284   | sendAlert.source = nodeId
99 | 00565 99 
01 | 00566 01 
91 | 00567 91 
01 | 00568 01 
1c | 00569 1c 
40 | 00570 40 push_c 11                     | push 11
0b | 00571 0b 
99 | 00572 99 push_v ushort 284             | push nodeId:ushort
01 | 00573 01 
1c | 00574 1c 
0f | 00575 0f eq                            | eq
4f | 00576 4f ifelse 267 268                | ifelse True_267 False_268
02 | 00577 .01 addr:581
45 | 00578 .0b 
02 | 00579 .01 addr:672
a0 | 00580 .0c 
89 | 00581 89 tkins_max 0 16                | insert track ParEver_sub_1_16
02 | 00582 .00 addr:588
4c | 00583 .10 
89 | 00584 89 tkins_max 0 17                | insert track ParEver_sub_2_17
02 | 00585 .00 addr:609
61 | 00586 .11 
01 | 00587 01 end                           | end
40 | 00588 40 push_c 1                      | push 1
01 | 00589 01 
9a | 00590 9a push_v ulong 306                    | push sendPath.versao_rota [Optm:: push_c addr + deref]
01 | 00591 01 
32 | 00592 32 
06 | 00593 06 add                           | add
aa | 00594 aa pop ulong 306                 | pop sendPath.versao_rota
01 | 00595 01 
32 | 00596 32 
29 | 00597 29 clken_c 0 10000 25            | clock enable Awake_10000_25 10000msec
03 | 00598 03 
00 | 00599 00 
27 | 00600 27 
10 | 00601 10 
02 | 00602 .00 addr:588
4c | 00603 .15 
01 | 00604 01 end                           | end
48 | 00605 48 memclr 0 8                    | clear WClocks gates from 0 to 1
00 | 00606 00 
08 | 00607 08 
01 | 00608 01 end                           | end
40 | 00609 40 push_c 2                      | push 2
02 | 00610 02 
a0 | 00611 a0 pop ubyte 58                  | evt RECEIVE() auxId = pop
3a | 00612 3a 
d1 | 00613 d1 set_c ushort 59 29            | await RECEIVE()[0]
3b | 00614 3b 
02 | 00615 .00 addr:618
6a | 00616 .1d 
01 | 00617 01 end                           | end
5e | 00618 5e getextdt_v 425 25             | getExtData recAlert 25
01 | 00619 01 
a9 | 00620 a9 
19 | 00621 19 
40 | 00622 40 push_c 2                      | push 2
02 | 00623 02 
98 | 00624 98 push_v ubyte 425                    | push recAlert.type [Optm:: push_c addr + deref]
01 | 00625 01 
a9 | 00626 a9 
0f | 00627 0f eq                            | eq
4f | 00628 4f ifelse 44 45                  | ifelse True_44 EndIf_45
02 | 00629 .00 addr:633
79 | 00630 .2c 
02 | 00631 .00 addr:609
61 | 00632 .1a 
58 | 00633 58 outevt_c 6 1                  | emit LED0 len=1 const=1
06 | 00634 06 
01 | 00635 01 
58 | 00636 58 outevt_c 7 1                  | emit LED1 len=1 const=1
07 | 00637 07 
01 | 00638 01 
58 | 00639 58 outevt_c 8 1                  | emit LED2 len=1 const=1
08 | 00640 08 
01 | 00641 01 
29 | 00642 29 clken_c 1 3000 37             | clock enable Awake_3000_37 3000msec
03 | 00643 03 
01 | 00644 01 
0b | 00645 0b 
b8 | 00646 b8 
02 | 00647 .00 addr:650
8a | 00648 .25 
01 | 00649 01 end                           | end
58 | 00650 58 outevt_c 6 0                  | emit LED0 len=1 const=0
06 | 00651 06 
00 | 00652 00 
58 | 00653 58 outevt_c 7 0                  | emit LED1 len=1 const=0
07 | 00654 07 
00 | 00655 00 
58 | 00656 58 outevt_c 8 0                  | emit LED2 len=1 const=0
08 | 00657 08 
00 | 00658 00 
39 | 00659 39 exec 45                       | goto  45
02 | 00660 .00 addr:609
61 | 00661 .1a 
48 | 00662 48 memclr 8 8                    | clear WClocks gates from 1 to 2
08 | 00663 08 
08 | 00664 08 
48 | 00665 48 memclr 58 2                   | clear EXT gates for RECEIVE()
3a | 00666 3a 
02 | 00667 02 
01 | 00668 01 end                           | end
39 | 00669 39 exec 269                      | goto  269
02 | 00670 .00 addr:570
3a | 00671 .0c 
89 | 00672 89 tkins_max 0 46                | insert track ParEver_sub_1_46
02 | 00673 .00 addr:679
a7 | 00674 .2e 
89 | 00675 89 tkins_max 0 47                | insert track ParEver_sub_2_47
05 | 00676 .00 addr:1336
38 | 00677 .2f 
01 | 00678 01 end                           | end
89 | 00679 89 tkins_max 0 51                | insert track ParEver_sub_1_51
02 | 00680 .00 addr:686
ae | 00681 .33 
89 | 00682 89 tkins_max 0 52                | insert track ParEver_sub_2_52
05 | 00683 .00 addr:1290
0a | 00684 .34 
01 | 00685 01 end                           | end
40 | 00686 40 push_c 1                      | push 1
01 | 00687 01 
a0 | 00688 a0 pop ubyte 61                  | evt RECEIVE() auxId = pop
3d | 00689 3d 
d1 | 00690 d1 set_c ushort 62 59            | await RECEIVE()[1]
3e | 00691 3e 
02 | 00692 .00 addr:695
b7 | 00693 .3b 
01 | 00694 01 end                           | end
5e | 00695 5e getextdt_v 325 25             | getExtData recPath 25
01 | 00696 01 
45 | 00697 45 
19 | 00698 19 
9a | 00699 9a push_v ulong 306                    | push sendPath.versao_rota [Optm:: push_c addr + deref]
01 | 00700 01 
32 | 00701 32 
9a | 00702 9a push_v ulong 331                    | push recPath.versao_rota [Optm:: push_c addr + deref]
01 | 00703 01 
4b | 00704 4b 
13 | 00705 13 gt                            | gt
4f | 00706 4f ifelse 190 191                | ifelse True_190 False_191
02 | 00707 .00 addr:711
c7 | 00708 .be 
02 | 00709 .00 addr:686
ae | 00710 .38 
2a | 00711 2a set_v ushort 281 ushort 326   | progenitor = recPath.source
99 | 00712 99 
01 | 00713 01 
19 | 00714 19 
01 | 00715 01 
46 | 00716 46 
2a | 00717 2a set_v ushort 403 ushort 281   | sendAlert.target = progenitor
99 | 00718 99 
01 | 00719 01 
93 | 00720 93 
01 | 00721 01 
19 | 00722 19 
40 | 00723 40 push_c 1                      | push 1
01 | 00724 01 
98 | 00725 98 push_v ubyte 330                    | push recPath.num_saltos [Optm:: push_c addr + deref]
01 | 00726 01 
4a | 00727 4a 
06 | 00728 06 add                           | add
a8 | 00729 a8 pop ubyte 305                 | pop sendPath.num_saltos
01 | 00730 01 
31 | 00731 31 
2a | 00732 2a set_v ulong 306 ulong 331     | sendPath.versao_rota = recPath.versao_rota
aa | 00733 aa 
01 | 00734 01 
32 | 00735 32 
01 | 00736 01 
4b | 00737 4b 
b9 | 00738 b9 outevt_v 40 300               | emit SEND len=25 var=sendPath
28 | 00739 28 
01 | 00740 01 
2c | 00741 2c 
d1 | 00742 d1 set_c ushort 46 69            | await SEND_DONE[0]
2e | 00743 2e 
02 | 00744 .00 addr:747
eb | 00745 .45 
01 | 00746 01 end                           | end
c8 | 00747 c8 set_c ubyte 452 0             | i = 0
01 | 00748 01 
c4 | 00749 c4 
00 | 00750 00 
c8 | 00751 c8 set_c ubyte 453 105           | __i_0x96b6e20 = 105
01 | 00752 01 
c5 | 00753 c5 
69 | 00754 69 
98 | 00755 98 push_v ubyte 453              | push __i_0x96b6e20:ubyte
01 | 00756 01 
c5 | 00757 c5 
98 | 00758 98 push_v ubyte 452              | push i:ubyte
01 | 00759 01 
c4 | 00760 c4 
11 | 00761 11 gte                           | gte
4f | 00762 4f ifelse 79 80                  | ifelse True_79 False_80
02 | 00763 .00 addr:767
ff | 00764 .4f 
03 | 00765 .00 addr:775
07 | 00766 .50 
3d | 00767 3d tkins_z 1 20 74               | insert track Loop_out_74 tree 20
94 | 00768 94 
03 | 00769 .00 addr:790
16 | 00770 .4a 
01 | 00771 01 end                           | end
39 | 00772 39 exec 81                       | goto  81
02 | 00773 .00 addr:755
f3 | 00774 .48 
2b | 00775 2b setarr_vc ushort 71 ubyte 452 105 0  | sucessores[i] = 0
18 | 00776 18 
00 | 00777 00 
47 | 00778 47 
01 | 00779 01 
c4 | 00780 c4 
69 | 00781 69 
00 | 00782 00 
41 | 00783 41 push_c 452                    | push &i
01 | 00784 01 
c4 | 00785 c4 
60 | 00786 60 inc ubyte                     | inc ubyte
39 | 00787 39 exec 81                       | goto  81
02 | 00788 .00 addr:755
f3 | 00789 .48 
89 | 00790 89 tkins_max 0 82                | insert track ParOr_sub_1_82
03 | 00791 .00 addr:797
1d | 00792 .52 
89 | 00793 89 tkins_max 0 83                | insert track ParOr_sub_2_83
04 | 00794 .00 addr:1083
3b | 00795 .53 
01 | 00796 01 end                           | end
c9 | 00797 c9 set_c ushort 452 0            | index = 0
01 | 00798 01 
c4 | 00799 c4 
00 | 00800 00 
40 | 00801 40 push_c 3                      | push 3
03 | 00802 03 
a0 | 00803 a0 pop ubyte 64                  | evt RECEIVE() auxId = pop
40 | 00804 40 
d1 | 00805 d1 set_c ushort 65 89            | await RECEIVE()[2]
41 | 00806 41 
03 | 00807 .00 addr:810
2a | 00808 .59 
01 | 00809 01 end                           | end
5e | 00810 5e getextdt_v 375 25             | getExtData recPos 25
01 | 00811 01 
77 | 00812 77 
19 | 00813 19 
c8 | 00814 c8 set_c ubyte 454 0             | i = 0
01 | 00815 01 
c6 | 00816 c6 
00 | 00817 00 
c8 | 00818 c8 set_c ubyte 455 5             | __i_0x96d0e00 = 5
01 | 00819 01 
c7 | 00820 c7 
05 | 00821 05 
98 | 00822 98 push_v ubyte 455              | push __i_0x96d0e00:ubyte
01 | 00823 01 
c7 | 00824 c7 
98 | 00825 98 push_v ubyte 454              | push i:ubyte
01 | 00826 01 
c6 | 00827 c6 
11 | 00828 11 gte                           | gte
4f | 00829 4f ifelse 129 130                | ifelse True_129 False_130
03 | 00830 .00 addr:834
42 | 00831 .81 
03 | 00832 .00 addr:842
4a | 00833 .82 
3d | 00834 3d tkins_z 1 25 94               | insert track Loop_out_94 tree 25
99 | 00835 99 
03 | 00836 .00 addr:1021
fd | 00837 .5e 
01 | 00838 01 end                           | end
39 | 00839 39 exec 131                      | goto  131
03 | 00840 .00 addr:822
36 | 00841 .5c 
99 | 00842 99 push_v ushort 376                    | push recPos.source [Optm:: push_c addr + deref]
01 | 00843 01 
78 | 00844 78 
40 | 00845 40 push_c 71                     | push_c &sucessores:ushort*
47 | 00846 47 
40 | 00847 40 push_c 105                    | push idx max 105
69 | 00848 69 
40 | 00849 40 push_c 21                     | push 21
15 | 00850 15 
98 | 00851 98 push_v ubyte 454              | push i:ubyte
01 | 00852 01 
c6 | 00853 c6 
08 | 00854 08 mult                          | mult
07 | 00855 07 mod                           | mod: limmit idx
40 | 00856 40 push_c 2                      | push var len ushort
02 | 00857 02 
08 | 00858 08 mult                          | mult: varlen * idx
06 | 00859 06 add                           | add: array base addr + len position
71 | 00860 71 deref ushort                  | deref ushort
0f | 00861 0f eq                            | eq
4f | 00862 4f ifelse 126 127                | ifelse True_126 False_127
03 | 00863 .00 addr:867
63 | 00864 .7e 
03 | 00865 .00 addr:951
b7 | 00866 .7f 
40 | 00867 40 push_c 21                     | push 21
15 | 00868 15 
98 | 00869 98 push_v ubyte 454              | push i:ubyte
01 | 00870 01 
c6 | 00871 c6 
08 | 00872 08 mult                          | mult
a9 | 00873 a9 pop ushort 452                | pop index
01 | 00874 01 
c4 | 00875 c4 
c8 | 00876 c8 set_c ubyte 456 0             | j = 0
01 | 00877 01 
c8 | 00878 c8 
00 | 00879 00 
c8 | 00880 c8 set_c ubyte 457 21            | __j_0x9651240 = 21
01 | 00881 01 
c9 | 00882 c9 
15 | 00883 15 
98 | 00884 98 push_v ubyte 457              | push __j_0x9651240:ubyte
01 | 00885 01 
c9 | 00886 c9 
98 | 00887 98 push_v ubyte 456              | push j:ubyte
01 | 00888 01 
c8 | 00889 c8 
11 | 00890 11 gte                           | gte
4f | 00891 4f ifelse 117 118                | ifelse True_117 False_118
03 | 00892 .00 addr:896
80 | 00893 .75 
03 | 00894 .00 addr:904
88 | 00895 .76 
3d | 00896 3d tkins_z 1 33 107              | insert track Loop_out_107 tree 33
a1 | 00897 a1 
03 | 00898 .00 addr:943
af | 00899 .6b 
01 | 00900 01 end                           | end
39 | 00901 39 exec 119                      | goto  119
03 | 00902 .00 addr:884
74 | 00903 .69 
40 | 00904 40 push_c 0                      | push 0
00 | 00905 00 
32 | 00906 32 pusharr_v ushort 71 ushort 452 105  | pusharr_v &sucessores[index]
19 | 00907 19 
47 | 00908 47 
01 | 00909 01 
c4 | 00910 c4 
69 | 00911 69 
71 | 00912 71 deref ushort                  | deref ushort
0f | 00913 0f eq                            | eq
4f | 00914 4f ifelse 114 115                | ifelse True_114 EndIf_115
03 | 00915 .00 addr:919
97 | 00916 .72 
03 | 00917 .00 addr:927
9f | 00918 .73 
3d | 00919 3d tkins_z 1 33 107              | insert track Loop_out_107 tree 33
a1 | 00920 a1 
03 | 00921 .00 addr:943
af | 00922 .6b 
01 | 00923 01 end                           | end
39 | 00924 39 exec 115                      | goto  115
03 | 00925 .00 addr:927
9f | 00926 .73 
40 | 00927 40 push_c 1                      | push 1
01 | 00928 01 
99 | 00929 99 push_v ushort 452             | push index:ushort
01 | 00930 01 
c4 | 00931 c4 
06 | 00932 06 add                           | add
a9 | 00933 a9 pop ushort 452                | pop index
01 | 00934 01 
c4 | 00935 c4 
41 | 00936 41 push_c 456                    | push &j
01 | 00937 01 
c8 | 00938 c8 
60 | 00939 60 inc ubyte                     | inc ubyte
39 | 00940 39 exec 119                      | goto  119
03 | 00941 .00 addr:884
74 | 00942 .69 
3d | 00943 3d tkins_z 1 25 94               | insert track Loop_out_94 tree 25
99 | 00944 99 
03 | 00945 .00 addr:1021
fd | 00946 .5e 
01 | 00947 01 end                           | end
39 | 00948 39 exec 128                      | goto  128
03 | 00949 .00 addr:1014
f6 | 00950 .80 
40 | 00951 40 push_c 0                      | push 0
00 | 00952 00 
40 | 00953 40 push_c 71                     | push_c &sucessores:ushort*
47 | 00954 47 
40 | 00955 40 push_c 105                    | push idx max 105
69 | 00956 69 
40 | 00957 40 push_c 21                     | push 21
15 | 00958 15 
98 | 00959 98 push_v ubyte 454              | push i:ubyte
01 | 00960 01 
c6 | 00961 c6 
08 | 00962 08 mult                          | mult
07 | 00963 07 mod                           | mod: limmit idx
40 | 00964 40 push_c 2                      | push var len ushort
02 | 00965 02 
08 | 00966 08 mult                          | mult: varlen * idx
06 | 00967 06 add                           | add: array base addr + len position
71 | 00968 71 deref ushort                  | deref ushort
0f | 00969 0f eq                            | eq
4f | 00970 4f ifelse 124 125                | ifelse True_124 EndIf_125
03 | 00971 .00 addr:975
cf | 00972 .7c 
03 | 00973 .00 addr:1014
f6 | 00974 .80 
99 | 00975 99 push_v ushort 376                    | push recPos.source [Optm:: push_c addr + deref]
01 | 00976 01 
78 | 00977 78 
40 | 00978 40 push_c 71                     | push_c &sucessores:ushort*
47 | 00979 47 
40 | 00980 40 push_c 105                    | push idx max 105
69 | 00981 69 
40 | 00982 40 push_c 21                     | push 21
15 | 00983 15 
98 | 00984 98 push_v ubyte 454              | push i:ubyte
01 | 00985 01 
c6 | 00986 c6 
08 | 00987 08 mult                          | mult
07 | 00988 07 mod                           | mod: limmit idx
40 | 00989 40 push_c 2                      | push var len ushort
02 | 00990 02 
08 | 00991 08 mult                          | mult: varlen * idx
06 | 00992 06 add                           | add: array base addr + len position
69 | 00993 69 set_e ushort                  | set (ushort)*(pop1) = pop2
40 | 00994 40 push_c 1                      | push 1
01 | 00995 01 
40 | 00996 40 push_c 21                     | push 21
15 | 00997 15 
98 | 00998 98 push_v ubyte 454              | push i:ubyte
01 | 00999 01 
c6 | 01000 c6 
08 | 01001 08 mult                          | mult
06 | 01002 06 add                           | add
a9 | 01003 a9 pop ushort 452                | pop index
01 | 01004 01 
c4 | 01005 c4 
3d | 01006 3d tkins_z 1 25 94               | insert track Loop_out_94 tree 25
99 | 01007 99 
03 | 01008 .00 addr:1021
fd | 01009 .5e 
01 | 01010 01 end                           | end
39 | 01011 39 exec 125                      | goto  125
03 | 01012 .00 addr:1014
f6 | 01013 .80 
41 | 01014 41 push_c 454                    | push &i
01 | 01015 01 
c6 | 01016 c6 
60 | 01017 60 inc ubyte                     | inc ubyte
39 | 01018 39 exec 131                      | goto  131
03 | 01019 .00 addr:822
36 | 01020 .5c 
c8 | 01021 c8 set_c ubyte 454 0             | i = 0
01 | 01022 01 
c6 | 01023 c6 
00 | 01024 00 
c8 | 01025 c8 set_c ubyte 455 10            | __i_0x96c4040 = 10
01 | 01026 01 
c7 | 01027 c7 
0a | 01028 0a 
98 | 01029 98 push_v ubyte 455              | push __i_0x96c4040:ubyte
01 | 01030 01 
c7 | 01031 c7 
98 | 01032 98 push_v ubyte 454              | push i:ubyte
01 | 01033 01 
c6 | 01034 c6 
11 | 01035 11 gte                           | gte
4f | 01036 4f ifelse 143 144                | ifelse True_143 False_144
04 | 01037 .00 addr:1041
11 | 01038 .8f 
04 | 01039 .00 addr:1049
19 | 01040 .90 
3d | 01041 3d tkins_z 1 25 136              | insert track Loop_out_136 tree 25
99 | 01042 99 
03 | 01043 .00 addr:797
1d | 01044 .55 
01 | 01045 01 end                           | end
39 | 01046 39 exec 145                      | goto  145
04 | 01047 .00 addr:1029
05 | 01048 .86 
41 | 01049 41 push_c 380                    | push recPos.sucessores
01 | 01050 01 
7c | 01051 7c 
40 | 01052 40 push_c 5                      | push idx max 5
05 | 01053 05 
98 | 01054 98 push_v ubyte 454              | push i:ubyte
01 | 01055 01 
c6 | 01056 c6 
07 | 01057 07 mod                           | mod: limmit idx
40 | 01058 40 push_c 2                      | push var len ushort
02 | 01059 02 
08 | 01060 08 mult                          | mult: varlen * idx
06 | 01061 06 add                           | add: array base addr + len position
71 | 01062 71 deref ushort                  | deref ushort
30 | 01063 30 poparr_v ushort 71 ushort 452 105  | pop to sucessores[index]
19 | 01064 19 
47 | 01065 47 
01 | 01066 01 
c4 | 01067 c4 
69 | 01068 69 
41 | 01069 41 push_c 454                    | push &i
01 | 01070 01 
c6 | 01071 c6 
60 | 01072 60 inc ubyte                     | inc ubyte
39 | 01073 39 exec 145                      | goto  145
04 | 01074 .00 addr:1029
05 | 01075 .86 
48 | 01076 48 memclr 58 2                   | clear EXT gates for RECEIVE()
3a | 01077 3a 
02 | 01078 02 
89 | 01079 89 tkins_max 0 84                | insert track ParOr_out_84
04 | 01080 .00 addr:1095
47 | 01081 .54 
01 | 01082 01 end                           | end
29 | 01083 29 clken_c 2 2000 146            | clock enable Awake_2000_146 2000msec
03 | 01084 03 
02 | 01085 02 
07 | 01086 07 
d0 | 01087 d0 
04 | 01088 .00 addr:1091
43 | 01089 .92 
01 | 01090 01 end                           | end
89 | 01091 89 tkins_max 0 84                | insert track ParOr_out_84
04 | 01092 .00 addr:1095
47 | 01093 .54 
01 | 01094 01 end                           | end
48 | 01095 48 memclr 16 8                   | clear WClocks gates from 2 to 3
10 | 01096 10 
08 | 01097 08 
48 | 01098 48 memclr 58 2                   | clear EXT gates for RECEIVE()
3a | 01099 3a 
02 | 01100 02 
2a | 01101 2a set_v ushort 353 ushort 281   | sendPos.target = progenitor
99 | 01102 99 
01 | 01103 01 
61 | 01104 61 
01 | 01105 01 
19 | 01106 19 
c9 | 01107 c9 set_c ushort 450 0            | index = 0
01 | 01108 01 
c2 | 01109 c2 
00 | 01110 00 
c9 | 01111 c9 set_c ushort 458 0            | i = 0
01 | 01112 01 
ca | 01113 ca 
00 | 01114 00 
40 | 01115 40 push_c 105                    | push 105
69 | 01116 69 
99 | 01117 99 push_v ushort 450             | push index:ushort
01 | 01118 01 
c2 | 01119 c2 
11 | 01120 11 gte                           | gte
4f | 01121 4f ifelse 154 155                | ifelse True_154 EndIf_155
04 | 01122 .00 addr:1126
66 | 01123 .9a 
04 | 01124 .00 addr:1134
6e | 01125 .9b 
3d | 01126 3d tkins_z 1 19 151              | insert track Loop_out_151 tree 19
93 | 01127 93 
04 | 01128 .00 addr:1262
ee | 01129 .97 
01 | 01130 01 end                           | end
39 | 01131 39 exec 155                      | goto  155
04 | 01132 .00 addr:1134
6e | 01133 .9b 
c9 | 01134 c9 set_c ushort 460 0            | n = 0
01 | 01135 01 
cc | 01136 cc 
00 | 01137 00 
d9 | 01138 d9 set_c ushort 462 1000         | __n_0x96b2be0 = 1000
01 | 01139 01 
ce | 01140 ce 
03 | 01141 03 
e8 | 01142 e8 
99 | 01143 99 push_v ushort 462             | push __n_0x96b2be0:ushort
01 | 01144 01 
ce | 01145 ce 
99 | 01146 99 push_v ushort 460             | push n:ushort
01 | 01147 01 
cc | 01148 cc 
11 | 01149 11 gte                           | gte
4f | 01150 4f ifelse 178 179                | ifelse True_178 False_179
04 | 01151 .00 addr:1155
83 | 01152 .b2 
04 | 01153 .00 addr:1163
8b | 01154 .b3 
3d | 01155 3d tkins_z 1 23 160              | insert track Loop_out_160 tree 23
97 | 01156 97 
04 | 01157 .00 addr:1253
e5 | 01158 .a0 
01 | 01159 01 end                           | end
39 | 01160 39 exec 180                      | goto  180
04 | 01161 .00 addr:1143
77 | 01162 .9e 
40 | 01163 40 push_c 10                     | push 10
0a | 01164 0a 
99 | 01165 99 push_v ushort 458             | push i:ushort
01 | 01166 01 
ca | 01167 ca 
11 | 01168 11 gte                           | gte
40 | 01169 40 push_c 105                    | push 105
69 | 01170 69 
99 | 01171 99 push_v ushort 450             | push index:ushort
01 | 01172 01 
c2 | 01173 c2 
11 | 01174 11 gte                           | gte
15 | 01175 15 lor                           | lor
4f | 01176 4f ifelse 174 175                | ifelse True_174 False_175
04 | 01177 .00 addr:1181
9d | 01178 .ae 
04 | 01179 .00 addr:1189
a5 | 01180 .af 
3d | 01181 3d tkins_z 1 23 160              | insert track Loop_out_160 tree 23
97 | 01182 97 
04 | 01183 .00 addr:1253
e5 | 01184 .a0 
01 | 01185 01 end                           | end
39 | 01186 39 exec 176                      | goto  176
04 | 01187 .00 addr:1237
d5 | 01188 .b0 
40 | 01189 40 push_c 0                      | push 0
00 | 01190 00 
32 | 01191 32 pusharr_v ushort 71 ushort 450 105  | pusharr_v &sucessores[index]
19 | 01192 19 
47 | 01193 47 
01 | 01194 01 
c2 | 01195 c2 
69 | 01196 69 
71 | 01197 71 deref ushort                  | deref ushort
10 | 01198 10 neq                           | neq
4f | 01199 4f ifelse 172 173                | ifelse True_172 EndIf_173
04 | 01200 .00 addr:1204
b4 | 01201 .ac 
04 | 01202 .00 addr:1237
d5 | 01203 .b0 
32 | 01204 32 pusharr_v ushort 71 ushort 450 105  | pusharr_v &sucessores[index]
19 | 01205 19 
47 | 01206 47 
01 | 01207 01 
c2 | 01208 c2 
69 | 01209 69 
71 | 01210 71 deref ushort                  | deref ushort
41 | 01211 41 push_c 355                    | push sendPos.sucessores
01 | 01212 01 
63 | 01213 63 
40 | 01214 40 push_c 5                      | push idx max 5
05 | 01215 05 
99 | 01216 99 push_v ushort 458             | push i:ushort
01 | 01217 01 
ca | 01218 ca 
07 | 01219 07 mod                           | mod: limmit idx
40 | 01220 40 push_c 2                      | push var len ushort
02 | 01221 02 
08 | 01222 08 mult                          | mult: varlen * idx
06 | 01223 06 add                           | add: array base addr + len position
69 | 01224 69 set_e ushort                  | set (ushort)*(pop1) = pop2
40 | 01225 40 push_c 1                      | push 1
01 | 01226 01 
99 | 01227 99 push_v ushort 458             | push i:ushort
01 | 01228 01 
ca | 01229 ca 
06 | 01230 06 add                           | add
a9 | 01231 a9 pop ushort 458                | pop i
01 | 01232 01 
ca | 01233 ca 
39 | 01234 39 exec 173                      | goto  173
04 | 01235 .00 addr:1237
d5 | 01236 .b0 
40 | 01237 40 push_c 1                      | push 1
01 | 01238 01 
99 | 01239 99 push_v ushort 450             | push index:ushort
01 | 01240 01 
c2 | 01241 c2 
06 | 01242 06 add                           | add
a9 | 01243 a9 pop ushort 450                | pop index
01 | 01244 01 
c2 | 01245 c2 
41 | 01246 41 push_c 460                    | push &n
01 | 01247 01 
cc | 01248 cc 
61 | 01249 61 inc ushort                    | inc ushort
39 | 01250 39 exec 180                      | goto  180
04 | 01251 .00 addr:1143
77 | 01252 .9e 
b9 | 01253 b9 outevt_v 40 350               | emit SEND len=25 var=sendPos
28 | 01254 28 
01 | 01255 01 
5e | 01256 5e 
d1 | 01257 d1 set_c ushort 48 184           | await SEND_DONE[1]
30 | 01258 30 
04 | 01259 .00 addr:1111
57 | 01260 .95 
01 | 01261 01 end                           | end
48 | 01262 48 memclr 46 2                   | clear EXT gates for SEND_DONE
2e | 01263 2e 
02 | 01264 02 
2a | 01265 2a set_v ushort 353 ushort 281   | sendPos.target = progenitor
99 | 01266 99 
01 | 01267 01 
61 | 01268 61 
01 | 01269 01 
19 | 01270 19 
b9 | 01271 b9 outevt_v 40 350               | emit SEND len=25 var=sendPos
28 | 01272 28 
01 | 01273 01 
5e | 01274 5e 
d1 | 01275 d1 set_c ushort 50 189           | await SEND_DONE[2]
32 | 01276 32 
02 | 01277 .00 addr:686
ae | 01278 .38 
01 | 01279 01 end                           | end
48 | 01280 48 memclr 16 8                   | clear WClocks gates from 2 to 3
10 | 01281 10 
08 | 01282 08 
48 | 01283 48 memclr 46 6                   | clear EXT gates for SEND_DONE
2e | 01284 2e 
06 | 01285 06 
48 | 01286 48 memclr 58 4                   | clear EXT gates for RECEIVE()
3a | 01287 3a 
04 | 01288 04 
01 | 01289 01 end                           | end
40 | 01290 40 push_c 2                      | push 2
02 | 01291 02 
a0 | 01292 a0 pop ubyte 67                  | evt RECEIVE() auxId = pop
43 | 01293 43 
d1 | 01294 d1 set_c ushort 68 196           | await RECEIVE()[3]
44 | 01295 44 
05 | 01296 .00 addr:1299
13 | 01297 .c4 
01 | 01298 01 end                           | end
5e | 01299 5e getextdt_v 425 25             | getExtData recAlert 25
01 | 01300 01 
a9 | 01301 a9 
19 | 01302 19 
40 | 01303 40 push_c 2                      | push 2
02 | 01304 02 
98 | 01305 98 push_v ubyte 425                    | push recAlert.type [Optm:: push_c addr + deref]
01 | 01306 01 
a9 | 01307 a9 
0f | 01308 0f eq                            | eq
4f | 01309 4f ifelse 202 203                | ifelse True_202 EndIf_203
05 | 01310 .00 addr:1314
22 | 01311 .ca 
05 | 01312 .00 addr:1323
2b | 01313 .cb 
b9 | 01314 b9 outevt_v 40 400               | emit SEND len=25 var=sendAlert
28 | 01315 28 
01 | 01316 01 
90 | 01317 90 
d1 | 01318 d1 set_c ushort 52 201           | await SEND_DONE[3]
34 | 01319 34 
05 | 01320 .00 addr:1323
2b | 01321 .cb 
01 | 01322 01 end                           | end
58 | 01323 58 outevt_c 6 0                  | emit LED0 len=1 const=0
06 | 01324 06 
00 | 01325 00 
39 | 01326 39 exec 193                      | goto  193
05 | 01327 .00 addr:1290
0a | 01328 .c1 
48 | 01329 48 memclr 46 2                   | clear EXT gates for SEND_DONE
2e | 01330 2e 
02 | 01331 02 
48 | 01332 48 memclr 58 2                   | clear EXT gates for RECEIVE()
3a | 01333 3a 
02 | 01334 02 
01 | 01335 01 end                           | end
c8 | 01336 c8 set_c ubyte 464 0             | i = 0
01 | 01337 01 
d0 | 01338 d0 
00 | 01339 00 
c8 | 01340 c8 set_c ubyte 465 4             | __i_0x96c6110 = 4
01 | 01341 01 
d1 | 01342 d1 
04 | 01343 04 
98 | 01344 98 push_v ubyte 465              | push __i_0x96c6110:ubyte
01 | 01345 01 
d1 | 01346 d1 
98 | 01347 98 push_v ubyte 464              | push i:ubyte
01 | 01348 01 
d0 | 01349 d0 
11 | 01350 11 gte                           | gte
4f | 01351 4f ifelse 215 216                | ifelse True_215 False_216
05 | 01352 .00 addr:1356
4c | 01353 .d7 
05 | 01354 .00 addr:1364
54 | 01355 .d8 
3d | 01356 3d tkins_z 1 13 210              | insert track Loop_out_210 tree 13
8d | 01357 8d 
05 | 01358 .00 addr:1380
64 | 01359 .d2 
01 | 01360 01 end                           | end
39 | 01361 39 exec 217                      | goto  217
05 | 01362 .00 addr:1344
40 | 01363 .d0 
2b | 01364 2b setarr_vc ushort 288 ubyte 464 4 0  | temps[i] = 0
98 | 01365 98 
00 | 01366 00 
01 | 01367 01 
20 | 01368 20 
01 | 01369 01 
d0 | 01370 d0 
04 | 01371 04 
00 | 01372 00 
41 | 01373 41 push_c 464                    | push &i
01 | 01374 01 
d0 | 01375 d0 
60 | 01376 60 inc ubyte                     | inc ubyte
39 | 01377 39 exec 217                      | goto  217
05 | 01378 .00 addr:1344
40 | 01379 .d0 
c8 | 01380 c8 set_c ubyte 464 0             | i = 0
01 | 01381 01 
d0 | 01382 d0 
00 | 01383 00 
c8 | 01384 c8 set_c ubyte 465 4             | __i_0x96e3770 = 4
01 | 01385 01 
d1 | 01386 d1 
04 | 01387 04 
98 | 01388 98 push_v ubyte 465              | push __i_0x96e3770:ubyte
01 | 01389 01 
d1 | 01390 d1 
98 | 01391 98 push_v ubyte 464              | push i:ubyte
01 | 01392 01 
d0 | 01393 d0 
11 | 01394 11 gte                           | gte
4f | 01395 4f ifelse 264 265                | ifelse True_264 False_265
05 | 01396 .01 addr:1400
78 | 01397 .08 
05 | 01398 .01 addr:1408
80 | 01399 .09 
3d | 01400 3d tkins_z 1 16 225              | insert track Loop_out_225 tree 16
90 | 01401 90 
06 | 01402 .00 addr:1546
0a | 01403 .e1 
01 | 01404 01 end                           | end
39 | 01405 39 exec 266                      | goto  266
05 | 01406 .00 addr:1388
6c | 01407 .df 
29 | 01408 29 clken_c 3 3000 230            | clock enable Awake_3000_230 3000msec
03 | 01409 03 
03 | 01410 03 
0b | 01411 0b 
b8 | 01412 b8 
05 | 01413 .00 addr:1416
88 | 01414 .e6 
01 | 01415 01 end                           | end
26 | 01416 26 outevt_z 9                    | emit REQ_TEMP
09 | 01417 09 
d1 | 01418 d1 set_c ushort 42 233           | await TEMP[0]
2a | 01419 2a 
05 | 01420 .00 addr:1423
8f | 01421 .e9 
01 | 01422 01 end                           | end
32 | 01423 32 pusharr_v ushort 288 ubyte 464 4  | pusharr_v &temps[i]
98 | 01424 98 
01 | 01425 01 
20 | 01426 20 
01 | 01427 01 
d0 | 01428 d0 
04 | 01429 04 
34 | 01430 34 getextdt_e 2                  | getExtData stack len=2
02 | 01431 02 
c9 | 01432 c9 set_c ushort 296 0            | temp = 0
01 | 01433 01 
28 | 01434 28 
00 | 01435 00 
c8 | 01436 c8 set_c ubyte 466 0             | j = 0
01 | 01437 01 
d2 | 01438 d2 
00 | 01439 00 
c8 | 01440 c8 set_c ubyte 467 4             | __j_0x9697c98 = 4
01 | 01441 01 
d3 | 01442 d3 
04 | 01443 04 
98 | 01444 98 push_v ubyte 467              | push __j_0x9697c98:ubyte
01 | 01445 01 
d3 | 01446 d3 
98 | 01447 98 push_v ubyte 466              | push j:ubyte
01 | 01448 01 
d2 | 01449 d2 
11 | 01450 11 gte                           | gte
4f | 01451 4f ifelse 246 247                | ifelse True_246 False_247
05 | 01452 .00 addr:1456
b0 | 01453 .f6 
05 | 01454 .00 addr:1464
b8 | 01455 .f7 
3d | 01456 3d tkins_z 1 22 238              | insert track Loop_out_238 tree 22
96 | 01457 96 
05 | 01458 .00 addr:1486
ce | 01459 .ee 
01 | 01460 01 end                           | end
39 | 01461 39 exec 248                      | goto  248
05 | 01462 .00 addr:1444
a4 | 01463 .ec 
32 | 01464 32 pusharr_v ushort 288 ubyte 464 4  | pusharr_v &temps[i]
98 | 01465 98 
01 | 01466 01 
20 | 01467 20 
01 | 01468 01 
d0 | 01469 d0 
04 | 01470 04 
71 | 01471 71 deref ushort                  | deref ushort
99 | 01472 99 push_v ushort 296             | push temp:ushort
01 | 01473 01 
28 | 01474 28 
06 | 01475 06 add                           | add
a9 | 01476 a9 pop ushort 296                | pop temp
01 | 01477 01 
28 | 01478 28 
41 | 01479 41 push_c 466                    | push &j
01 | 01480 01 
d2 | 01481 d2 
60 | 01482 60 inc ubyte                     | inc ubyte
39 | 01483 39 exec 248                      | goto  248
05 | 01484 .00 addr:1444
a4 | 01485 .ec 
40 | 01486 40 push_c 4                      | push 4
04 | 01487 04 
99 | 01488 99 push_v ushort 296             | push temp:ushort
01 | 01489 01 
28 | 01490 28 
09 | 01491 09 div                           | div
a9 | 01492 a9 pop ushort 298                | pop med_temp
01 | 01493 01 
2a | 01494 2a 
41 | 01495 41 push_c 500                    | push 500
01 | 01496 01 
f4 | 01497 f4 
99 | 01498 99 push_v ushort 298             | push med_temp:ushort
01 | 01499 01 
2a | 01500 2a 
13 | 01501 13 gt                            | gt
4f | 01502 4f ifelse 261 262                | ifelse True_261 False_262
05 | 01503 .01 addr:1507
e3 | 01504 .05 
05 | 01505 .01 addr:1533
fd | 01506 .06 
2a | 01507 2a set_v ushort 286 ushort 298   | alta_temp = med_temp
99 | 01508 99 
01 | 01509 01 
1e | 01510 1e 
01 | 01511 01 
2a | 01512 2a 
58 | 01513 58 outevt_c 8 1                  | emit LED2 len=1 const=1
08 | 01514 08 
01 | 01515 01 
b9 | 01516 b9 outevt_v 40 400               | emit SEND len=25 var=sendAlert
28 | 01517 28 
01 | 01518 01 
90 | 01519 90 
d1 | 01520 d1 set_c ushort 54 257           | await SEND_DONE[4]
36 | 01521 36 
05 | 01522 .01 addr:1525
f5 | 01523 .01 
01 | 01524 01 end                           | end
29 | 01525 29 clken_c 4 4000 258            | clock enable Awake_4000_258 4000msec
03 | 01526 03 
04 | 01527 04 
0f | 01528 0f 
a0 | 01529 a0 
06 | 01530 .01 addr:1539
03 | 01531 .07 
01 | 01532 01 end                           | end
58 | 01533 58 outevt_c 8 0                  | emit LED2 len=1 const=0
08 | 01534 08 
00 | 01535 00 
39 | 01536 39 exec 263                      | goto  263
06 | 01537 .01 addr:1539
03 | 01538 .07 
41 | 01539 41 push_c 464                    | push &i
01 | 01540 01 
d0 | 01541 d0 
60 | 01542 60 inc ubyte                     | inc ubyte
39 | 01543 39 exec 266                      | goto  266
05 | 01544 .00 addr:1388
6c | 01545 .df 
48 | 01546 48 memclr 24 16                  | clear WClocks gates from 3 to 5
18 | 01547 18 
10 | 01548 10 
48 | 01549 48 memclr 42 2                   | clear EXT gates for TEMP
2a | 01550 2a 
02 | 01551 02 
48 | 01552 48 memclr 46 2                   | clear EXT gates for SEND_DONE
2e | 01553 2e 
02 | 01554 02 
39 | 01555 39 exec 218                      | goto  218
05 | 01556 .00 addr:1380
64 | 01557 .da 
48 | 01558 48 memclr 24 16                  | clear WClocks gates from 3 to 5
18 | 01559 18 
10 | 01560 10 
48 | 01561 48 memclr 42 2                   | clear EXT gates for TEMP
2a | 01562 2a 
02 | 01563 02 
48 | 01564 48 memclr 46 2                   | clear EXT gates for SEND_DONE
2e | 01565 2e 
02 | 01566 02 
01 | 01567 01 end                           | end
39 | 01568 39 exec 269                      | goto  269
02 | 01569 .00 addr:570
3a | 01570 .0c 
48 | 01571 48 memclr 0 40                   | clear WClocks gates from 0 to 5
00 | 01572 00 
28 | 01573 28 
48 | 01574 48 memclr 42 2                   | clear EXT gates for TEMP
2a | 01575 2a 
02 | 01576 02 
48 | 01577 48 memclr 46 10                  | clear EXT gates for SEND_DONE
2e | 01578 2e 
0a | 01579 0a 
48 | 01580 48 memclr 58 8                   | clear EXT gates for RECEIVE()
3a | 01581 3a 
08 | 01582 08 
01 | 01583 01 end                           | end
48 | 01584 48 memclr 0 40                   | clear WClocks gates from 0 to 5
00 | 01585 00 
28 | 01586 28 
01 | 01587 01 end                           | end
