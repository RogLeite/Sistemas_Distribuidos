#include "/home/terra/TerraNG/terra/TerraNet.defs"
//#define TESTE 1
#define ANTI_TIGHT 1
#define LED_VIEW 2 //Define o tempo em que os leds ficam acesos
#define ROOT_TIME 15
#define SOMETHING 3
#define MSG_TYPE_PATHING 1
#define MSG_TYPE_SUCESSORES 3
#define TEMP_MEM 4
//GENERIC-RESUMIR----------------------------------------------
#define QTD_SUCESSORES 5 //20-2 = 18-> 18/2 = 9 é a quantidade máxima de sucessores adjacentes a um nó
#define QTD_SUCSUC 12 //meio arbitrário, definido pra uma rede 5x5
#define QTD_SUCESSORES_SQUARED 60//QTD_SUCESSORES*QTD_SUCSUC
#define TAM_MSG 10
#define MUITO_GRANDE 1000
var ubyte[QTD_SUCESSORES_SQUARED] sucessores;
var ubyte progenitor;
//GENERIC+RESUMIR++++++++++++++++++++++++++++++++++++++++++++++
//GENERIC-REQUEST----------------------------------------------
#define MSG_TYPE_REQUEST 4
#define WAIT_REQUEST 15
	// valor de photo para gerar request
#define REQ_12 500
#define REQ_23 520
#define REQ_31 540
#define REQ_33 560
//GENERIC+REQUEST++++++++++++++++++++++++++++++++++++++++++++++
//GENERIC-ANSWER----------------------------------------------
#define MSG_TYPE_ANSWER 5
//GENERIC+ANSWER++++++++++++++++++++++++++++++++++++++++++++++

#define ANSWER_TIMEOUT 2


//var ubyte fila;

var ubyte nodeId = getNodeId();
var ubyte[TEMP_MEM] temps;
var ubyte med_temp = 0;

//define mensagem tipo MSG_TYPE_SUCESSORES


pktype posMsg from radioMsg with
	var ubyte[QTD_SUCESSORES] sucessores;
end

var posMsg sendPos;
var posMsg recPos;

sendPos.type = MSG_TYPE_SUCESSORES;
sendPos.target = BROADCAST;
sendPos.source = nodeId;


/*
//define mensagem tipo MSG_TYPE_PATHING
pktype pathMsg from radioMsg with
	var ubyte num_saltos;
	var ulong versao_rota;
end

var pathMsg sendPath;
var pathMsg recPath;

sendPath.type = MSG_TYPE_PATHING;
sendPath.target = BROADCAST;
sendPath.source = nodeId;
sendPath.num_saltos = 0;
sendPath.versao_rota = 0;


//GENERIC-REQUEST----------------------------------------------
//define mensagem tipo MSG_TYPE_REQUEST
pktype requestMsg from radioMsg with 
	var ushort requestedId;
end

var requestMsg sendReq;
var requestMsg recReq;
sendReq.target = 0;
sendReq.type = MSG_TYPE_REQUEST;
sendReq.source = nodeId;

//GENERIC+REQUEST++++++++++++++++++++++++++++++++++++++++++++++

//GENERIC-ANSWER----------------------------------------------
//define mensagem tipo MSG_TYPE_ANSWER
pktype answerMsg from radioMsg with 
	var ushort temp;
end

var answerMsg sendAns;
var answerMsg recAns;
sendAns.target = BROADCAST;
sendAns.type = MSG_TYPE_ANSWER;
sendAns.source = nodeId;

//GENERIC+ANSWER++++++++++++++++++++++++++++++++++++++++++++++
*/

//GENERIC-ANSWER-REQUEST-PATHING----------------------------------------------
pktype reqanspathMsg from radioMsg with 
	var ubyte requestedId;
	var ubyte temp;
	var ubyte num_saltos;
	var ulong versao_rota;
end

var reqanspathMsg sendPath;
var reqanspathMsg recPath;
sendPath.type = MSG_TYPE_PATHING;
sendPath.target = BROADCAST;
sendPath.source = nodeId;
sendPath.num_saltos = 0;
sendPath.versao_rota = 0;

var reqanspathMsg sendReq;

sendReq.target = 0;
sendReq.type = MSG_TYPE_REQUEST;
sendReq.source = nodeId;

var reqanspathMsg sendAns;
var reqanspathMsg recAns;
sendAns.target = BROADCAST;
sendAns.type = MSG_TYPE_ANSWER;
sendAns.source = nodeId;
//GENERIC+ANSWER+REQUEST+PATHING++++++++++++++++++++++++++++++++++++++++++++++

//GENERIC-JUNTANDO----------------------------------------------
par do
	//GENERIC-ANSWER----------------------------------------------
	loop do
		if nodeId==11 then
			recAns = await RECEIVE(MSG_TYPE_ANSWER);
			emit LED0(TOGGLE);
		else
			recAns = await RECEIVE(MSG_TYPE_ANSWER);
			sendAns.temp = recAns.temp;
			emit SEND(sendAns);
			await SEND_DONE();
		end
	end
	//GENERIC+ANSWER++++++++++++++++++++++++++++++++++++++++++++++

with

	//GENERAL-REQUEST----------------------------------------------
	loop do
		var ubyte reqId = 0;
		if nodeId==11 then
			await WAIT_REQUEST s;
			var ubyte photo;
			emit REQ_PHOTO();
			photo = await PHOTO();

			//Gera REQUEST
			if photo == REQ_12 then reqId = 12;
			else/if photo == REQ_23 then reqId = 23;
			else/if photo == REQ_31 then reqId = 31;
			else/if photo == REQ_33 then reqId = 33;
			else reqId = 0;
			end	
		else	//se é node
			await RECEIVE(MSG_TYPE_REQUEST);
		end
		//envia REQUEST
		if reqId == nodeId then
			sendAns.temp = med_temp;
			emit SEND(sendAns);
			await SEND_DONE();
		else/if reqId != 0 and reqId!= 11 then
			sendReq.requestedId = reqId;
			sendReq.target = 0;
			loop i,QTD_SUCESSORES do
				loop j,QTD_SUCSUC do
					if sucessores[i*QTD_SUCSUC+j]==reqId then
						sendReq.target = sucessores[i*QTD_SUCSUC];
						break;
					end
				end
				if sendReq.target != 0 then break; end
			end
			emit SEND(sendReq);
			await SEND_DONE();
		end
	end
	//GENERAL+REQUEST++++++++++++++++++++++++++++++++++++++++++++++
with
	//GENERIC-PATHING----------------------------------------------
	loop do
		var ubyte updated = FALSE;
		if nodeId == 11 then
			sendPath.versao_rota = sendPath.versao_rota + 1;
		else
			recPath = await RECEIVE(MSG_TYPE_PATHING);
			if recPath.versao_rota > sendPath.versao_rota then
				progenitor = recPath.source;
				sendPos.target = progenitor;
				sendAns.target = progenitor;
				sendPath.num_saltos = recPath.num_saltos + 1;
				sendPath.versao_rota = recPath.versao_rota;
				updated = TRUE;
				//FIM-ESCUTA-SUCESSORES-------------------------
			end
		end
	//vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
		if nodeId==11 or updated==TRUE then
			emit SEND(sendPath);
			await SEND_DONE();
			loop i,QTD_SUCESSORES_SQUARED do
				sucessores[i] = 0;
			end
			par/or do
				loop do //loop de aguardar o retorno dos sucessores
					var ubyte index = 0;
					recPos = await RECEIVE(MSG_TYPE_SUCESSORES);
					loop i,QTD_SUCESSORES do
						if sucessores[i*QTD_SUCSUC]==recPos.source then
							index = i*QTD_SUCSUC;
							loop j,QTD_SUCSUC do
								if sucessores[index]==0 then break; end
								index = index+1;
							end
							break; //index está no primeiro espaço vazio para se adicionar id's 
						else/if sucessores[i*QTD_SUCSUC]==0 then //não encontrou o source no vetor
							sucessores[i*QTD_SUCSUC] = recPos.source;
							index = i*QTD_SUCSUC+1;
							break;
						end
					end
					//se sai do loop, está "garantido" que index está num espaço para preencher
					loop i,TAM_MSG do
						sucessores[index] = recPos.sucessores[i];
					end
				end
			with
				await ANSWER_TIMEOUT s;
			end
			//agora enviar pro progenitor TEUS sucessores
			if nodeId != 11 then
				sendPos.target = progenitor;
				var ubyte index = 0;
				loop do
					var ubyte i=0;
					if index >= QTD_SUCESSORES_SQUARED then break; end
					loop n, MUITO_GRANDE do
						if index >= QTD_SUCESSORES_SQUARED or i>=10 then break;
						else/if sucessores[index]!=0 then
							sendPos.sucessores[i] = sucessores[index];
							i = i+1;
						end
						index = index+1;
					end
					emit SEND(sendPos);
					await SEND_DONE();
				end
			end
		else			
			#ifdef ANTI_TIGHT		
				await 1ms;
			#endif
		end
		//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
	end
	//GENERIC+PATHING++++++++++++++++++++++++++++++++++++++++++++++
with
	//GENERIC-TEMP----------------------------------------------
	loop do
		if nodeId != 11 then
			loop i, TEMP_MEM do temps[i] = 0; end
			loop i,TEMP_MEM do
				await SOMETHING s;
				//fica esperando tempo passar pra leitura
				emit REQ_TEMP();
				temps[i] = await TEMP();
				med_temp = 0;
				loop j,TEMP_MEM do med_temp = med_temp+temps[i]; end
				med_temp = med_temp/TEMP_MEM;
			end
		else
			#ifdef ANTI_TIGHT		
				await 1ms;
			#endif
		end
	end
	//GENERIC+TEMP++++++++++++++++++++++++++++++++++++++++++++++

end

//GENERIC+JUNTANDO++++++++++++++++++++++++++++++++++++++++++++++
