#include "/home/terra/TerraNG/terra/TerraNet.defs"
#define LED_VIEW 2 //Define o tempo em que os leds ficam acesos
#define ROOT_TIME 20
#define SOMETHING 1000
var ushort nodeId = getNodeId();
pktype pathMsg from radioMsg with
	var ubyte num_saltos;
	var ulong versao_rota;
end

var pathMsg sendPath;
var pathMsg recPath;

sendPath.type = 1;
sendPath.target = BROADCAST;
sendPath.source = nodeId;
sendPath.num_saltos = 0;
sendPath.versao_rota = 0;

if nodeId == 11 then  //se é a raiz:
//espera e manda o criar path
	loop do
		//dorme até o próximo envio
		await ROOT_TIME s;

		//incrementa a versao da rota
		sendPath.versao_rota = sendPath.versao_rota + 1;

		//envia sendPath e acende LED0 para vermos isso
		emit SEND(sendPath);
		emit LED0(ON);

		//confirma que foi enviado e apaga o LED0 depois de dormir 1 segg para vermos o led aceso
		await SEND_DONE();
		await LED_VIEW s;
		emit LED0(OFF);
	end


else //se não é a raiz
	var ushort progenitor;
	par do 
		//fica escutando recPath
		loop do
			recPath = await RECEIVE(1);
			emit LED0(ON);
			if recPath.versao_rota > sendPath.versao_rota then
				emit LED1(ON);
				progenitor = recPath.source;
				sendPath.versao_rota = recPath.versao_rota;
				sendPath.num_saltos = recPath.num_saltos + 1;
				emit SEND(sendPath);
				await SEND_DONE();
				await LED_VIEW s;
				emit LED1(OFF);
			else
				//se recebeu uma rota obsoleta, pisca led amarelo
				emit LED2(ON);
				await LED_VIEW s;
				emit LED2(OFF);
			end
			emit LED0(OFF);
		end
	with
		loop do
			await SOMETHING s;
			//fica esperando tempo passar do limite
		end
	end
end


