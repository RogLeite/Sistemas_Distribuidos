#include "/home/terra/TerraNG/terra/TerraNet.defs"
#define LED_VIEW 2 //Define o tempo em que os leds ficam acesos
#define ROOT_TIME 15
#define SOMETHING 3
#define TEMP_LIM 500
#define MSG_TYPE_PATHING 1
#define MSG_TYPE_ALERT 2
#define MSG_TYPE_SUCESSORES 3
#define ANSWER_TIMEOUT 2
#define ALERT_REPEAT 4
#define TEMP_MEM 4
#define QTD_SUCESSORES 7
//#define TESTE 1
var ubyte fila;

var ushort nodeId = getNodeId();


//define mensagem tipo MSG_TYPE_PATHING
pktype pathMsg from radioMsg with
	var ubyte num_saltos;
	var ulong versao_rota;
end

var pathMsg sendPath;
var pathMsg recPath;

sendPath.type = MSG_TYPE_PATHING;
sendPath.target = BROADCAST;
sendPath.source = nodeId;
sendPath.num_saltos = 0;
sendPath.versao_rota = 0;

//define mensagem tipo MSG_TYPE_SUCESSORES
pktype posMsg from radioMsg with
	
end

var posMsg sendPos;
var posMsg recPos;

sendPos.type = MSG_TYPE_SUCESSORES;
sendPos.target = BROADCAST;
sendPos.source = nodeId;


//define mensagem tipo MSG_TYPE_ALERT
pktype alertMsg from radioMsg with end

var alertMsg sendAlert;
var alertMsg recAlert;
sendAlert.target = BROADCAST;
sendAlert.type = MSG_TYPE_ALERT;
sendAlert.source = nodeId;
recAlert.type = MSG_TYPE_ALERT;


//fica escutando recPath
loop do
	recPath = await RECEIVE(MSG_TYPE_PATHING);
	emit LED0(ON);
	if recPath.versao_rota > sendPath.versao_rota then
		progenitor = recPath.source;
		sendAlert.target = progenitor;
		sendPath.versao_rota = recPath.versao_rota;
		sendPath.num_saltos = recPath.num_saltos + 1;
		emit SEND(sendPath);
		await SEND_DONE();
		//ESCUTA-SUCESSORES-----------------------------
		par/or do
			loop i,QTD_SUCESSORES do

			end
		with
			await ANSWER_TIMEOUT s;
		end

		//FIM-ESCUTA-SUCESSORES-------------------------


	else
		//se recebeu uma rota obsoleta, pisca n√£o faz nada
	end
	emit LED0(OFF);
end

